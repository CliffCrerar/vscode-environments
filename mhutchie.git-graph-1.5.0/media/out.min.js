"use strict";(function(u,s){var t=acquireVsCodeApi();var f={alert:'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>',branch:'<svg xmlns="http://www.w3.org/2000/svg" width="10" height="16" viewBox="0 0 10 16"><path fill-rule="evenodd" d="M10 5c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v.3c-.02.52-.23.98-.63 1.38-.4.4-.86.61-1.38.63-.83.02-1.48.16-2 .45V4.72a1.993 1.993 0 0 0-1-3.72C.88 1 0 1.89 0 3a2 2 0 0 0 1 1.72v6.56c-.59.35-1 .99-1 1.72 0 1.11.89 2 2 2 1.11 0 2-.89 2-2 0-.53-.2-1-.53-1.36.09-.06.48-.41.59-.47.25-.11.56-.17.94-.17 1.05-.05 1.95-.45 2.75-1.25S8.95 7.77 9 6.73h-.02C9.59 6.37 10 5.73 10 5zM2 1.8c.66 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2C1.35 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2zm0 12.41c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm6-8c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>',close:'<svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>',info:'<svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"/></svg>',tag:'<svg xmlns="http://www.w3.org/2000/svg" width="15" height="16" viewBox="0 0 15 16"><path fill-rule="evenodd" d="M7.73 1.73C7.26 1.26 6.62 1 5.96 1H3.5C2.13 1 1 2.13 1 3.5v2.47c0 .66.27 1.3.73 1.77l6.06 6.06c.39.39 1.02.39 1.41 0l4.59-4.59a.996.996 0 0 0 0-1.41L7.73 1.73zM2.38 7.09c-.31-.3-.47-.7-.47-1.13V3.5c0-.88.72-1.59 1.59-1.59h2.47c.42 0 .83.16 1.13.47l6.14 6.13-4.73 4.73-6.13-6.15zM3.01 3h2v2H3V3h.01z"/></svg>',loading:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="32" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M10.24 7.4a4.15 4.15 0 0 1-1.2 3.6 4.346 4.346 0 0 1-5.41.54L4.8 10.4.5 9.8l.6 4.2 1.31-1.26c2.36 1.74 5.7 1.57 7.84-.54a5.876 5.876 0 0 0 1.74-4.46l-1.75-.34zM2.96 5a4.346 4.346 0 0 1 5.41-.54L7.2 5.6l4.3.6-.6-4.2-1.31 1.26c-2.36-1.74-5.7-1.57-7.85.54C.5 5.03-.06 6.65.01 8.26l1.75.35A4.17 4.17 0 0 1 2.96 5z"/></svg>',openFolder:'<svg xmlns="http://www.w3.org/2000/svg" class="openFolderIcon" viewBox="0 0 30 30"><path d="M 5 4 C 3.895 4 3 4.895 3 6 L 3 9 L 3 11 L 22 11 L 27 11 L 27 8 C 27 6.895 26.105 6 25 6 L 12.199219 6 L 11.582031 4.9707031 C 11.221031 4.3687031 10.570187 4 9.8671875 4 L 5 4 z M 2.5019531 13 C 1.4929531 13 0.77040625 13.977406 1.0664062 14.941406 L 4.0351562 24.587891 C 4.2941563 25.426891 5.0692656 26 5.9472656 26 L 15 26 L 24.052734 26 C 24.930734 26 25.705844 25.426891 25.964844 24.587891 L 28.933594 14.941406 C 29.229594 13.977406 28.507047 13 27.498047 13 L 15 13 L 2.5019531 13 z"/></svg>',closedFolder:'<svg xmlns="http://www.w3.org/2000/svg" class="closedFolderIcon" viewBox="0 0 30 30"><path d="M 4 3 C 2.895 3 2 3.895 2 5 L 2 8 L 13 8 L 28 8 L 28 7 C 28 5.895 27.105 5 26 5 L 11.199219 5 L 10.582031 3.9707031 C 10.221031 3.3687031 9.5701875 3 8.8671875 3 L 4 3 z M 3 10 C 2.448 10 2 10.448 2 11 L 2 23 C 2 24.105 2.895 25 4 25 L 26 25 C 27.105 25 28 24.105 28 23 L 28 11 C 28 10.448 27.552 10 27 10 L 3 10 z"/></svg>',file:'<svg xmlns="http://www.w3.org/2000/svg" class="fileIcon" viewBox="0 0 30 30"><path d="M24.707,8.793l-6.5-6.5C18.019,2.105,17.765,2,17.5,2H7C5.895,2,5,2.895,5,4v22c0,1.105,0.895,2,2,2h16c1.105,0,2-0.895,2-2 V9.5C25,9.235,24.895,8.981,24.707,8.793z M18,10c-0.552,0-1-0.448-1-1V3.904L23.096,10H18z"/></svg>'};var r=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];var i={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"};var o={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#x27;":"'","&#x2F;":"/"};var n=/[&<>"'\/]/g;var a=/&lt;|&gt;|&amp;|&quot;|&#x27;|&#x2F;/g;var g=/^[-\/].*|[\\" ><~^:?*[]|\.\.|\/\/|\/\.|@{|[.\/]$|\.lock$|^@$/g;var v="&#8230;";var l="http://www.w3.org/2000/svg";var C="active";var h="commitDetailsOpen";var m="compareCommitOpen";var c="contextMenuActive";var d="dialogActive";var p="dockedCommitDetailsViewOpen";function y(e,t,i){if(e.length!==t.length)return false;for(var s=0;s<e.length;s++){if(!i(e[s],t[s]))return false}return true}function b(e){return e>9?e:"0"+e}function x(e){return e.replace(n,function(e){return i[e]})}function w(e){return e.replace(a,function(e){return o[e]})}function k(e,t,i){var s=u.getElementsByClassName(e),o;for(o=0;o<s.length;o++){s[o].addEventListener(t,i)}}function B(e,t){t.parentNode.insertBefore(e,t.nextSibling)}function E(e){t.postMessage(e)}function L(e){return u.documentElement.style.getPropertyValue(e)}var H=function(){function e(e,t,i,s){var o=this;this.options=[];this.selectedOption=0;this.dropdownVisible=false;this.showInfo=t;this.changeCallback=s;this.elem=u.getElementById(e);this.menuElem=u.createElement("div");this.menuElem.className="dropdownMenu";var n=this.menuElem.appendChild(u.createElement("div"));n.className="dropdownFilter";this.filterInput=n.appendChild(u.createElement("input"));this.filterInput.className="dropdownFilterInput";this.filterInput.placeholder="Filter "+i+"...";this.optionsElem=this.menuElem.appendChild(u.createElement("div"));this.optionsElem.className="dropdownOptions";this.noResultsElem=this.menuElem.appendChild(u.createElement("div"));this.noResultsElem.className="dropdownNoResults";this.noResultsElem.innerHTML="No results found.";this.currentValueElem=this.elem.appendChild(u.createElement("div"));this.currentValueElem.className="dropdownCurrentValue";this.elem.appendChild(this.menuElem);u.addEventListener("click",function(e){if(!e.target)return;if(e.target===o.currentValueElem){o.dropdownVisible=!o.dropdownVisible;if(o.dropdownVisible){o.filterInput.value="";o.filter()}o.elem.classList.toggle("dropdownOpen");if(o.dropdownVisible)o.filterInput.focus()}else if(o.dropdownVisible){if(e.target.closest(".dropdown")!==o.elem){o.close()}else{var t=e.target.closest(".dropdownOption");if(t!==null&&t.parentNode===o.optionsElem&&typeof t.dataset.id!=="undefined"){var i=parseInt(t.dataset.id);o.close();if(o.selectedOption!==i){o.selectedOption=i;o.render();o.changeCallback(o.options[o.selectedOption].value)}}}}},true);u.addEventListener("contextmenu",function(){return o.close()},true);u.addEventListener("keyup",function(e){if(e.key==="Escape")o.close()},true);this.filterInput.addEventListener("keyup",function(){return o.filter()})}e.prototype.setOptions=function(e,t){this.options=e;var i=0;for(var s=0;s<e.length;s++){if(e[s].value===t){i=s;break}}this.selectedOption=i;if(this.dropdownVisible&&e.length<=1)this.close();this.render()};e.prototype.refresh=function(){if(this.options.length>0)this.render()};e.prototype.render=function(){this.elem.classList.add("loaded");this.currentValueElem.innerHTML=this.options[this.selectedOption].name;var e="";for(var t=0;t<this.options.length;t++){e+='<div class="dropdownOption'+(this.selectedOption===t?" selected":"")+'" data-id="'+t+'">'+x(this.options[t].name)+(this.showInfo?'<div class="dropdownOptionInfo" title="'+x(this.options[t].value)+'">'+f.info+"</div>":"")+"</div>"}this.optionsElem.className="dropdownOptions"+(this.showInfo?" showInfo":"");this.optionsElem.innerHTML=e;this.filterInput.style.display="none";this.noResultsElem.style.display="none";this.menuElem.style.cssText="opacity:0; display:block;";this.currentValueElem.style.width=Math.max(this.menuElem.offsetWidth+(this.showInfo&&this.menuElem.offsetHeight<272?0:12),130)+"px";this.menuElem.style.cssText="right:0; overflow-y:auto; max-height:297px;";if(this.dropdownVisible)this.filter()};e.prototype.filter=function(){var e=this.filterInput.value.toLowerCase(),t,i=false;for(var s=0;s<this.options.length;s++){t=this.options[s].name.toLowerCase().indexOf(e)>-1;this.optionsElem.children[s].style.display=t?"block":"none";if(t)i=true}this.filterInput.style.display="block";this.noResultsElem.style.display=i?"none":"block"};e.prototype.close=function(){this.elem.classList.remove("dropdownOpen");this.dropdownVisible=false};return e}();var R=function(){function e(e){this.lines=[];this.end=0;this.numUncommitted=0;this.colour=e}e.prototype.addLine=function(e,t,i,s){this.lines.push({p1:e,p2:t,lockedFirst:s});if(i){if(t.y<this.numUncommitted)this.numUncommitted=t.y}else{this.numUncommitted++}};e.prototype.getColour=function(){return this.colour};e.prototype.getEnd=function(){return this.end};e.prototype.setEnd=function(e){this.end=e};e.prototype.draw=function(e,t,i){var s=t.graphColours[this.colour%t.graphColours.length],o,n,a,r,l,h=[],m="",c="",d=t.grid.y*(t.graphStyle==="angular"?.38:.8);for(o=0;o<this.lines.length;o++){n=this.lines[o].p1.x*t.grid.x+t.grid.offsetX;a=this.lines[o].p1.y*t.grid.y+t.grid.offsetY;r=this.lines[o].p2.x*t.grid.x+t.grid.offsetX;l=this.lines[o].p2.y*t.grid.y+t.grid.offsetY;if(i>-1){if(this.lines[o].p1.y>i){a+=t.grid.expandY;l+=t.grid.expandY}else if(this.lines[o].p2.y>i){if(n===r){l+=t.grid.expandY}else if(this.lines[o].lockedFirst){h.push({p1:{x:n,y:a},p2:{x:r,y:l},isCommitted:o>=this.numUncommitted,lockedFirst:this.lines[o].lockedFirst});h.push({p1:{x:r,y:a+t.grid.y},p2:{x:r,y:l+t.grid.expandY},isCommitted:o>=this.numUncommitted,lockedFirst:this.lines[o].lockedFirst});continue}else{h.push({p1:{x:n,y:a},p2:{x:n,y:l-t.grid.y+t.grid.expandY},isCommitted:o>=this.numUncommitted,lockedFirst:this.lines[o].lockedFirst});a+=t.grid.expandY;l+=t.grid.expandY}}}h.push({p1:{x:n,y:a},p2:{x:r,y:l},isCommitted:o>=this.numUncommitted,lockedFirst:this.lines[o].lockedFirst})}o=0;while(o<h.length-1){if(h[o].p1.x===h[o].p2.x&&h[o].p2.x===h[o+1].p1.x&&h[o+1].p1.x===h[o+1].p2.x&&h[o].p2.y===h[o+1].p1.y&&h[o].isCommitted===h[o+1].isCommitted){h[o].p2.y=h[o+1].p2.y;h.splice(o+1,1)}else{o++}}for(o=0;o<h.length;o++){n=h[o].p1.x;a=h[o].p1.y;r=h[o].p2.x;l=h[o].p2.y;if(m!==""&&o>0&&h[o].isCommitted!==h[o-1].isCommitted){this.drawPath(e,m,c);m="";c=""}if(m===""||o>0&&(n!==h[o-1].p2.x||a!==h[o-1].p2.y))m+="M"+n.toFixed(0)+","+a.toFixed(1);if(c==="")c=h[o].isCommitted?s:"#808080";if(n===r){m+="L"+r.toFixed(0)+","+l.toFixed(1)}else{if(t.graphStyle==="angular"){m+="L"+(h[o].lockedFirst?r.toFixed(0)+","+(l-d).toFixed(1):n.toFixed(0)+","+(a+d).toFixed(1))+"L"+r.toFixed(0)+","+l.toFixed(1)}else{m+="C"+n.toFixed(0)+","+(a+d).toFixed(1)+" "+r.toFixed(0)+","+(l-d).toFixed(1)+" "+r.toFixed(0)+","+l.toFixed(1)}}}this.drawPath(e,m,c)};e.prototype.drawPath=function(e,t,i){var s=e.appendChild(u.createElementNS(l,"path")),o=e.appendChild(u.createElementNS(l,"path"));s.setAttribute("class","shadow");s.setAttribute("d",t);o.setAttribute("class","line");o.setAttribute("d",t);o.setAttribute("stroke",i)};return e}();var D=function(){function e(e){this.x=0;this.parents=[];this.nextParent=0;this.onBranch=null;this.isCommitted=true;this.isCurrent=false;this.nextX=0;this.connections=[];this.y=e}e.prototype.addParent=function(e){this.parents.push(e)};e.prototype.hasParents=function(){return this.parents.length>0};e.prototype.getNextParent=function(){if(this.nextParent<this.parents.length)return this.parents[this.nextParent];return null};e.prototype.getLastParent=function(){if(this.nextParent<1)return null;return this.parents[this.nextParent-1]};e.prototype.registerParentProcessed=function(){this.nextParent++};e.prototype.isMerge=function(){return this.parents.length>1};e.prototype.addToBranch=function(e,t){if(this.onBranch===null){this.onBranch=e;this.x=t}};e.prototype.isNotOnBranch=function(){return this.onBranch===null};e.prototype.isOnThisBranch=function(e){return this.onBranch===e};e.prototype.getBranch=function(){return this.onBranch};e.prototype.getPoint=function(){return{x:this.x,y:this.y}};e.prototype.getNextPoint=function(){return{x:this.nextX,y:this.y}};e.prototype.getIsCommitted=function(){return this.isCommitted};e.prototype.getPointConnectingTo=function(e,t){for(var i=0;i<this.connections.length;i++){if(this.connections[i].connectsTo===e&&this.connections[i].onBranch===t)return{x:i,y:this.y}}return null};e.prototype.registerUnavailablePoint=function(e,t,i){if(e===this.nextX){this.nextX=e+1;this.connections[e]={connectsTo:t,onBranch:i}}};e.prototype.getColour=function(){return this.onBranch!==null?this.onBranch.getColour():0};e.prototype.setNotCommited=function(){this.isCommitted=false};e.prototype.setCurrent=function(){this.isCurrent=true};e.prototype.draw=function(e,t,i){if(this.onBranch===null)return;var s=e.appendChild(u.createElementNS(l,"circle"));var o=this.isCommitted?t.graphColours[this.onBranch.getColour()%t.graphColours.length]:"#808080";s.setAttribute("cx",(this.x*t.grid.x+t.grid.offsetX).toString());s.setAttribute("cy",(this.y*t.grid.y+t.grid.offsetY+(i?t.grid.expandY:0)).toString());s.setAttribute("r","4");if(this.isCurrent){s.setAttribute("class","current");s.setAttribute("stroke",o)}else{s.setAttribute("fill",o)}};return e}();var S=function(){function e(e,t){this.svgGroup=null;this.maxWidth=-1;this.vertices=[];this.branches=[];this.availableColours=[];this.config=t;this.svg=u.createElementNS(l,"svg");var i=this.svg.appendChild(u.createElementNS(l,"defs"));var s=i.appendChild(u.createElementNS(l,"linearGradient"));s.setAttribute("id","GraphGradient");this.svgGradientStop1=s.appendChild(u.createElementNS(l,"stop"));this.svgGradientStop1.setAttribute("stop-color","white");this.svgGradientStop2=s.appendChild(u.createElementNS(l,"stop"));this.svgGradientStop2.setAttribute("stop-color","black");var o=i.appendChild(u.createElementNS(l,"mask"));o.setAttribute("id","GraphMask");this.svgMaskRect=o.appendChild(u.createElementNS(l,"rect"));this.svgMaskRect.setAttribute("fill","url(#GraphGradient)");this.setDimensions(0,0);u.getElementById(e).appendChild(this.svg)}e.prototype.loadCommits=function(e,t,i){this.vertices=[];this.branches=[];this.availableColours=[];var s,o;for(s=0;s<e.length;s++){this.vertices.push(new D(s))}for(s=0;s<e.length;s++){for(o=0;o<e[s].parentHashes.length;o++){if(typeof i[e[s].parentHashes[o]]==="number"){this.vertices[s].addParent(this.vertices[i[e[s].parentHashes[o]]])}}}if(e.length>0){if(e[0].hash==="*"){this.vertices[0].setCurrent();this.vertices[0].setNotCommited()}else if(t!==null&&typeof i[t]==="number"){this.vertices[i[t]].setCurrent()}}while((s=this.findStart())!==-1){this.determinePath(s)}};e.prototype.render=function(e){var t=u.createElementNS(l,"g"),i,s=this.getWidth();t.setAttribute("mask","url(#GraphMask)");for(i=0;i<this.branches.length;i++){this.branches[i].draw(t,this.config,e!==null?e.id:-1)}for(i=0;i<this.vertices.length;i++){this.vertices[i].draw(t,this.config,e!==null&&i>e.id)}if(this.svgGroup!==null)this.svg.removeChild(this.svgGroup);this.svg.appendChild(t);this.svgGroup=t;this.setDimensions(s,this.getHeight(e));this.applyMaxWidth(s)};e.prototype.clear=function(){if(this.svgGroup!==null){this.svg.removeChild(this.svgGroup);this.svgGroup=null;this.setDimensions(0,0)}};e.prototype.getWidth=function(){var e=0,t,i;for(t=0;t<this.vertices.length;t++){i=this.vertices[t].getNextPoint();if(i.x>e)e=i.x}return e*this.config.grid.x};e.prototype.getHeight=function(e){return this.vertices.length*this.config.grid.y+this.config.grid.offsetY-this.config.grid.y/2+(e!==null?this.config.grid.expandY:0)};e.prototype.getVertexColour=function(e){return this.vertices[e].getColour()%this.config.graphColours.length};e.prototype.limitMaxWidth=function(e){this.maxWidth=e;this.applyMaxWidth(this.getWidth())};e.prototype.setDimensions=function(e,t){this.svg.setAttribute("width",e.toString());this.svg.setAttribute("height",t.toString());this.svgMaskRect.setAttribute("width",e.toString());this.svgMaskRect.setAttribute("height",t.toString())};e.prototype.applyMaxWidth=function(e){var t=this.maxWidth>-1?(this.maxWidth-12)/e:1;var i=this.maxWidth>-1?this.maxWidth/e:1;this.svgGradientStop1.setAttribute("offset",t.toString());this.svgGradientStop2.setAttribute("offset",i.toString())};e.prototype.determinePath=function(e){var t=e;var i=this.vertices[t],s=this.vertices[t].getNextParent();var o=i.isNotOnBranch()?i.getNextPoint():i.getPoint(),n;if(s!==null&&i.isMerge()&&!i.isNotOnBranch()&&!s.isNotOnBranch()){var a=false,r=s.getBranch();for(t=e+1;t<this.vertices.length;t++){n=this.vertices[t].getPointConnectingTo(s,r);if(n!==null){a=true}else{n=this.vertices[t].getNextPoint()}r.addLine(o,n,i.getIsCommitted(),!a&&this.vertices[t]!==s?o.x<n.x:true);this.vertices[t].registerUnavailablePoint(n.x,s,r);o=n;if(a){i.registerParentProcessed();break}}}else{var l=new R(this.getAvailableColour(e));i.addToBranch(l,o.x);i.registerUnavailablePoint(o.x,i,l);for(t=e+1;t<this.vertices.length;t++){n=s===this.vertices[t]&&!s.isNotOnBranch()?this.vertices[t].getPoint():this.vertices[t].getNextPoint();l.addLine(o,n,i.getIsCommitted(),o.x<n.x);this.vertices[t].registerUnavailablePoint(n.x,s,l);o=n;if(s===this.vertices[t]){i.registerParentProcessed();var h=!s.isNotOnBranch();s.addToBranch(l,n.x);i=s;s=i.getNextParent();if(h)break}}l.setEnd(t);this.branches.push(l);this.availableColours[l.getColour()]=t}};e.prototype.findStart=function(){for(var e=0;e<this.vertices.length;e++){if(this.vertices[e].getNextParent()!==null||this.vertices[e].isNotOnBranch())return e}return-1};e.prototype.getAvailableColour=function(e){for(var t=0;t<this.availableColours.length;t++){if(e>this.availableColours[t]){return t}}this.availableColours.push(0);return this.availableColours.length-1};return e}();var e=function(){function e(e,t,i,s,o){var n=this;this.gitBranches=[];this.gitBranchHead=null;this.commits=[];this.commitHead=null;this.commitLookup={};this.avatars={};this.currentBranch=null;this.moreCommitsAvailable=false;this.showRemoteBranches=true;this.expandedCommit=null;this.loadBranchesCallback=null;this.loadCommitsCallback=null;this.gitRepos=t;this.config=s;this.maxCommits=s.initialLoadCommits;this.graph=new S("commitGraph",this.config);this.viewElem=e;this.controlsElem=u.getElementById("controls");this.tableElem=u.getElementById("commitTable");this.footerElem=u.getElementById("footer");this.repoDropdown=new H("repoSelect",true,"Repos",function(e){n.currentRepo=e;n.maxCommits=n.config.initialLoadCommits;n.closeCommitDetails(false);n.currentBranch=null;n.saveState();n.refresh(true)});this.branchDropdown=new H("branchSelect",false,"Branches",function(e){n.currentBranch=e;n.maxCommits=n.config.initialLoadCommits;n.closeCommitDetails(false);n.saveState();n.renderShowLoading();n.requestLoadCommits(true,function(){})});this.showRemoteBranchesElem=u.getElementById("showRemoteBranchesCheckbox");this.showRemoteBranchesElem.addEventListener("change",function(){n.showRemoteBranches=n.showRemoteBranchesElem.checked;n.saveState();n.refresh(true)});this.dockedCommitDetailsView=u.getElementById("dockedCommitDetailsView");this.scrollShadowElem=u.getElementById("scrollShadow");u.getElementById("refreshBtn").addEventListener("click",function(){n.refresh(true)});this.observeWindowSizeChanges();this.observeWebviewStyleChanges();this.observeWebviewScroll();this.observeKeyboardEvents();this.renderShowLoading();if(o){this.currentBranch=o.currentBranch;this.showRemoteBranches=o.showRemoteBranches;this.showRemoteBranchesElem.checked=this.showRemoteBranches;if(typeof this.gitRepos[o.currentRepo]!=="undefined"){this.currentRepo=o.currentRepo;this.maxCommits=o.maxCommits;this.expandedCommit=o.expandedCommit;this.avatars=o.avatars;this.loadBranches(o.gitBranches,o.gitBranchHead,true,true);this.loadCommits(o.commits,o.commitHead,o.moreCommitsAvailable,true)}}this.loadRepos(this.gitRepos,i);this.requestLoadBranchesAndCommits(false)}e.prototype.loadRepos=function(e,t){this.gitRepos=e;this.saveState();var i=Object.keys(e),s=false;if(typeof e[this.currentRepo]==="undefined"){this.currentRepo=t!==null&&typeof e[t]!=="undefined"?t:i[0];this.saveState();s=true}var o=[],n,a;for(a=0;a<i.length;a++){n=i[a].split("/");o.push({name:n[n.length-1],value:i[a]})}u.getElementById("repoControl").style.display=i.length>1?"inline":"none";this.repoDropdown.setOptions(o,this.currentRepo);if(s){this.refresh(true)}};e.prototype.loadBranches=function(e,t,i,s){if(!s||!i&&y(this.gitBranches,e,function(e,t){return e===t})&&this.gitBranchHead===t){this.triggerLoadBranchesCallback(false,s);return}this.gitBranches=e;this.gitBranchHead=t;if(this.currentBranch===null||this.currentBranch!==""&&this.gitBranches.indexOf(this.currentBranch)===-1){this.currentBranch=this.config.showCurrentBranchByDefault&&this.gitBranchHead!==null?this.gitBranchHead:""}this.saveState();var o=[{name:"Show All",value:""}];for(var n=0;n<this.gitBranches.length;n++){o.push({name:this.gitBranches[n].indexOf("remotes/")===0?this.gitBranches[n].substring(8):this.gitBranches[n],value:this.gitBranches[n]})}this.branchDropdown.setOptions(o,this.currentBranch);this.triggerLoadBranchesCallback(true,s)};e.prototype.triggerLoadBranchesCallback=function(e,t){if(this.loadBranchesCallback!==null){this.loadBranchesCallback(e,t);this.loadBranchesCallback=null}};e.prototype.loadCommits=function(e,t,i,s){if(!s&&this.moreCommitsAvailable===i&&this.commitHead===t&&y(this.commits,e,function(e,t){return e.hash===t.hash&&y(e.refs,t.refs,function(e,t){return e.name===t.name&&e.type===t.type})&&y(e.parentHashes,t.parentHashes,function(e,t){return e===t})})){if(this.commits.length>0&&this.commits[0].hash==="*"){this.commits[0]=e[0];this.saveState();this.renderUncommittedChanges()}this.triggerLoadCommitsCallback(false);return}this.moreCommitsAvailable=i;this.commits=e;this.commitHead=t;this.commitLookup={};this.saveState();var o,n=false,a=false,r={};for(o=0;o<this.commits.length;o++){this.commitLookup[this.commits[o].hash]=o;if(this.expandedCommit!==null){if(this.expandedCommit.hash===this.commits[o].hash){n=true}else if(this.expandedCommit.compareWithHash===this.commits[o].hash){a=true}}if(this.config.fetchAvatars&&typeof this.avatars[this.commits[o].email]!=="string"&&this.commits[o].email!==""){if(typeof r[this.commits[o].email]==="undefined"){r[this.commits[o].email]=[this.commits[o].hash]}else{r[this.commits[o].email].push(this.commits[o].hash)}}}this.graph.loadCommits(this.commits,this.commitHead,this.commitLookup);if(this.expandedCommit!==null&&(!n||this.expandedCommit.compareWithHash!==null&&!a)){this.closeCommitDetails(false);this.saveState()}this.render();this.triggerLoadCommitsCallback(true);this.fetchAvatars(r)};e.prototype.triggerLoadCommitsCallback=function(e){if(this.loadCommitsCallback!==null){this.loadCommitsCallback(e);this.loadCommitsCallback=null}};e.prototype.loadAvatar=function(e,t){this.avatars[e]=t;this.saveState();var i=u.getElementsByClassName("avatar"),s=x(e);for(var o=0;o<i.length;o++){if(i[o].dataset.email===s){i[o].innerHTML='<img class="avatarImg" src="'+t+'">'}}};e.prototype.refresh=function(e){if(e){if(this.expandedCommit!==null){this.closeCommitDetails(false);this.saveState()}this.renderShowLoading()}this.requestLoadBranchesAndCommits(e)};e.prototype.requestLoadBranches=function(e,t){if(this.loadBranchesCallback!==null)return;this.loadBranchesCallback=t;E({command:"loadBranches",repo:this.currentRepo,showRemoteBranches:this.showRemoteBranches,hard:e})};e.prototype.requestLoadCommits=function(e,t){if(this.loadCommitsCallback!==null)return;this.loadCommitsCallback=t;E({command:"loadCommits",repo:this.currentRepo,branchName:this.currentBranch!==null?this.currentBranch:"",maxCommits:this.maxCommits,showRemoteBranches:this.showRemoteBranches,hard:e})};e.prototype.requestLoadBranchesAndCommits=function(i){var s=this;this.requestLoadBranches(i,function(t,e){if(e){s.requestLoadCommits(i,function(e){if(!i&&(t||e)){se()}})}else{E({command:"loadRepos",check:true})}})};e.prototype.fetchAvatars=function(e){var t=Object.keys(e);for(var i=0;i<t.length;i++){E({command:"fetchAvatar",repo:this.currentRepo,email:t[i],commits:e[t[i]]})}};e.prototype.saveState=function(){t.setState({gitRepos:this.gitRepos,gitBranches:this.gitBranches,gitBranchHead:this.gitBranchHead,commits:this.commits,commitHead:this.commitHead,avatars:this.avatars,currentBranch:this.currentBranch,currentRepo:this.currentRepo,moreCommitsAvailable:this.moreCommitsAvailable,maxCommits:this.maxCommits,showRemoteBranches:this.showRemoteBranches,expandedCommit:this.expandedCommit})};e.prototype.render=function(){this.renderTable();this.renderGraph()};e.prototype.renderGraph=function(){var e=u.getElementById("tableColHeaders");if(e===null)return;var t=this.config.commitDetailsViewLocation==="Inline"?this.expandedCommit:null;var i=e.clientHeight+1,s=t!==null?u.getElementById("commitDetails"):null;this.config.grid.expandY=s!==null?s.getBoundingClientRect().height:this.config.grid.expandY;this.config.grid.y=this.commits.length>0?(this.tableElem.children[0].clientHeight-i-(t!==null?this.config.grid.expandY:0))/this.commits.length:this.config.grid.y;this.config.grid.offsetY=i+this.config.grid.y/2;this.graph.render(t)};e.prototype.renderTable=function(){var n=this;var e='<tr id="tableColHeaders"><th id="tableHeaderGraphCol" class="tableColHeader">Graph</th><th class="tableColHeader">Description</th><th class="tableColHeader">Date</th><th class="tableColHeader">Author</th><th class="tableColHeader">Commit</th></tr>',t,i=this.commits.length>0&&this.commits[0].hash==="*"?"*":this.commitHead;for(t=0;t<this.commits.length;t++){var s="",o=x(this.commits[t].message),a=U(this.commits[t].date),r=void 0,l=void 0,h=void 0,m=void 0;for(r=0;r<this.commits[t].refs.length;r++){l=x(this.commits[t].refs[r].name);h=this.commits[t].refs[r].type==="head"&&this.commits[t].refs[r].name===this.gitBranchHead;m='<span class="gitRef '+this.commits[t].refs[r].type+(h?" active":"")+'" data-name="'+l+'">'+(this.commits[t].refs[r].type==="tag"?f.tag:f.branch)+l+"</span>";s=h?m+s:s+m}e+="<tr "+(this.commits[t].hash!=="*"?'class="commit" data-hash="'+this.commits[t].hash+'"':'class="unsavedChanges"')+' data-id="'+t+'" data-color="'+this.graph.getVertexColour(t)+'"><td></td><td>'+(this.commits[t].hash===this.commitHead?'<span class="commitHeadDot"></span>':"")+s+(this.commits[t].hash===i?"<b>"+o+"</b>":o)+'</td><td title="'+a.title+'">'+a.value+'</td><td title="'+x(this.commits[t].author+" <"+this.commits[t].email+">")+'">'+(this.config.fetchAvatars?'<span class="avatar" data-email="'+x(this.commits[t].email)+'">'+(typeof this.avatars[this.commits[t].email]==="string"?'<img class="avatarImg" src="'+this.avatars[this.commits[t].email]+'">':"")+"</span>":"")+x(this.commits[t].author)+'</td><td title="'+x(this.commits[t].hash)+'">'+q(this.commits[t].hash)+"</td></tr>"}this.tableElem.innerHTML="<table>"+e+"</table>";this.footerElem.innerHTML=this.moreCommitsAvailable?'<div id="loadMoreCommitsBtn" class="roundedBtn">Load More Commits</div>':"";this.makeTableResizable();if(this.moreCommitsAvailable){u.getElementById("loadMoreCommitsBtn").addEventListener("click",function(){n.footerElem.innerHTML='<h2 id="loadingHeader">'+f.loading+"Loading ...</h2>";n.maxCommits+=n.config.loadMoreCommits;n.closeCommitDetails(true);n.saveState();n.requestLoadCommits(true,function(){})})}if(this.expandedCommit!==null){var c=null,d=null,p=u.getElementsByClassName("commit");for(t=0;t<p.length;t++){if(this.expandedCommit.hash===p[t].dataset.hash||this.expandedCommit.compareWithHash===p[t].dataset.hash){if(this.expandedCommit.hash===p[t].dataset.hash){c=p[t]}else{d=p[t]}if(c!==null&&(this.expandedCommit.compareWithHash===null||d!==null))break}}if(c===null||this.expandedCommit.compareWithHash!==null&&d===null){this.closeCommitDetails(false);this.saveState()}else{this.expandedCommit.id=parseInt(c.dataset.id);this.expandedCommit.srcElem=c;this.expandedCommit.compareWithSrcElem=d;this.saveState();if(this.expandedCommit.compareWithHash===null){if(this.expandedCommit.commitDetails!==null&&this.expandedCommit.fileTree!==null){this.showCommitDetails(this.expandedCommit.commitDetails,this.expandedCommit.fileTree)}else{this.loadCommitDetails(c)}}else{if(this.expandedCommit.fileChanges!==null&&this.expandedCommit.fileTree!==null){this.showCommitComparison(this.expandedCommit.hash,this.expandedCommit.compareWithHash,this.expandedCommit.fileChanges,this.expandedCommit.fileTree)}else{this.loadCommitComparison(d)}}}}k("commit","contextmenu",function(e){e.stopPropagation();var t=e.target.closest(".commit");var i=t.dataset.hash;X(e,[{title:"Add Tag"+v,onClick:function(){Z("Add tag to commit <b><i>"+q(i)+"</i></b>:",[{type:"text-ref",name:"Name: ",default:""},{type:"select",name:"Type: ",default:"annotated",options:[{name:"Annotated",value:"annotated"},{name:"Lightweight",value:"lightweight"}]},{type:"text",name:"Message: ",default:"",placeholder:"Optional"}],"Add Tag",function(e){E({command:"addTag",repo:n.currentRepo,tagName:e[0],commitHash:i,lightweight:e[1]==="lightweight",message:e[2]})},t)}},{title:"Create Branch"+v,onClick:function(){J("Enter the name of the branch you would like to create from commit <b><i>"+q(i)+"</i></b>:","","Create Branch",function(e){E({command:"createBranch",repo:n.currentRepo,branchName:e,commitHash:i})},t)}},null,{title:"Checkout"+v,onClick:function(){K("Are you sure you want to checkout commit <b><i>"+q(i)+"</i></b>? This will result in a 'detached HEAD' state.",function(){E({command:"checkoutCommit",repo:n.currentRepo,commitHash:i})},t)}},{title:"Cherry Pick"+v,onClick:function(){if(n.commits[n.commitLookup[i]].parentHashes.length===1){K("Are you sure you want to cherry pick commit <b><i>"+q(i)+"</i></b>?",function(){E({command:"cherrypickCommit",repo:n.currentRepo,commitHash:i,parentIndex:0})},t)}else{var e=n.commits[n.commitLookup[i]].parentHashes.map(function(e,t){return{name:q(e)+(typeof n.commitLookup[e]==="number"?": "+n.commits[n.commitLookup[e]].message:""),value:(t+1).toString()}});Q("Are you sure you want to cherry pick merge commit <b><i>"+q(i)+"</i></b>? Choose the parent hash on the main branch, to cherry pick the commit relative to:","1",e,"Yes, cherry pick commit",function(e){E({command:"cherrypickCommit",repo:n.currentRepo,commitHash:i,parentIndex:parseInt(e)})},t)}}},{title:"Revert"+v,onClick:function(){if(n.commits[n.commitLookup[i]].parentHashes.length===1){K("Are you sure you want to revert commit <b><i>"+q(i)+"</i></b>?",function(){E({command:"revertCommit",repo:n.currentRepo,commitHash:i,parentIndex:0})},t)}else{var e=n.commits[n.commitLookup[i]].parentHashes.map(function(e,t){return{name:q(e)+(typeof n.commitLookup[e]==="number"?": "+n.commits[n.commitLookup[e]].message:""),value:(t+1).toString()}});Q("Are you sure you want to revert merge commit <b><i>"+q(i)+"</i></b>? Choose the parent hash on the main branch, to revert the commit relative to:","1",e,"Yes, revert commit",function(e){E({command:"revertCommit",repo:n.currentRepo,commitHash:i,parentIndex:parseInt(e)})},t)}}},null,{title:"Merge into current branch"+v,onClick:function(){Z("Are you sure you want to merge commit <b><i>"+q(i)+"</i></b> into the current branch?",[{type:"checkbox",name:"Create a new commit even if fast-forward is possible",value:true},{type:"checkbox",name:"Squash commits",value:false}],"Yes, merge",function(e){ee("Merging Commit");E({command:"mergeCommit",repo:n.currentRepo,commitHash:i,createNewCommit:e[0]==="checked",squash:e[1]==="checked"})},null)}},{title:"Reset current branch to this Commit"+v,onClick:function(){Q("Are you sure you want to reset the <b>current branch</b> to commit <b><i>"+q(i)+"</i></b>?","mixed",[{name:"Soft - Keep all changes, but reset head",value:"soft"},{name:"Mixed - Keep working tree, but reset index",value:"mixed"},{name:"Hard - Discard all changes",value:"hard"}],"Yes, reset",function(e){E({command:"resetToCommit",repo:n.currentRepo,commitHash:i,resetMode:e})},t)}},null,{title:"Copy Commit Hash to Clipboard",onClick:function(){E({command:"copyToClipboard",type:"Commit Hash",data:i})}}],t)});k("commit","click",function(e){var t=e.target.closest(".commit");if(n.expandedCommit!==null){if(n.expandedCommit.hash===t.dataset.hash){n.closeCommitDetails(true)}else if(e.ctrlKey||e.metaKey){if(n.expandedCommit.compareWithHash===t.dataset.hash){n.closeCommitComparison(true)}else{n.loadCommitComparison(t)}}else{n.loadCommitDetails(t)}}else{n.loadCommitDetails(t)}});k("gitRef","contextmenu",function(e){e.stopPropagation();var t=e.target.closest(".gitRef");var i=w(t.dataset.name),s,o;if(t.classList.contains("tag")){s=[{title:"Delete Tag"+v,onClick:function(){K("Are you sure you want to delete the tag <b><i>"+x(i)+"</i></b>?",function(){E({command:"deleteTag",repo:n.currentRepo,tagName:i})},null)}},{title:"Push Tag"+v,onClick:function(){K("Are you sure you want to push the tag <b><i>"+x(i)+"</i></b>?",function(){ee("Pushing Tag");E({command:"pushTag",repo:n.currentRepo,tagName:i})},null)}}];o="Tag Name"}else{if(t.classList.contains("head")){s=[];if(n.gitBranchHead!==i){s.push({title:"Checkout Branch",onClick:function(){return n.checkoutBranchAction(i,false)}})}s.push({title:"Rename Branch"+v,onClick:function(){J("Enter the new name for branch <b><i>"+x(i)+"</i></b>:",i,"Rename Branch",function(e){E({command:"renameBranch",repo:n.currentRepo,oldName:i,newName:e})},null)}});if(n.gitBranchHead!==i){s.push({title:"Delete Branch"+v,onClick:function(){$("Are you sure you want to delete the branch <b><i>"+x(i)+"</i></b>?","Force Delete",false,"Delete Branch",function(e){E({command:"deleteBranch",repo:n.currentRepo,branchName:i,forceDelete:e})},null)}},{title:"Merge into current branch"+v,onClick:function(){Z("Are you sure you want to merge branch <b><i>"+x(i)+"</i></b> into the current branch?",[{type:"checkbox",name:"Create a new commit even if fast-forward is possible",value:true},{type:"checkbox",name:"Squash commits",value:false}],"Yes, merge",function(e){ee("Merging Branch");E({command:"mergeBranch",repo:n.currentRepo,branchName:i,createNewCommit:e[0]==="checked",squash:e[1]==="checked"})},null)}})}}else{s=[{title:"Delete Remote Branch"+v,onClick:function(){K("Are you sure you want to delete the remote branch <b><i>"+x(i)+"</i></b>?",function(){ee("Deleting Remote Branch");var e=i.indexOf("/");E({command:"deleteRemoteBranch",repo:n.currentRepo,branchName:e>-1?i.substr(e+1):i,remote:e>-1?i.substr(0,e):"origin"})},null)}},{title:"Checkout Branch"+v,onClick:function(){return n.checkoutBranchAction(i,true)}}]}o="Branch Name"}s.push(null,{title:"Copy "+o+" to Clipboard",onClick:function(){E({command:"copyToClipboard",type:o,data:i})}});X(e,s,t)});k("gitRef","click",function(e){return e.stopPropagation()});k("gitRef","dblclick",function(e){e.stopPropagation();se();var t=e.target.closest(".gitRef");if(!t.classList.contains("tag")){n.checkoutBranchAction(w(t.dataset.name),t.classList.contains("remote"))}})};e.prototype.renderUncommittedChanges=function(){var e=U(this.commits[0].date);u.getElementsByClassName("unsavedChanges")[0].innerHTML="<td></td><td><b>"+x(this.commits[0].message)+'</b></td><td title="'+e.title+'">'+e.value+'</td><td title="* <>">*</td><td title="*">*</td>'};e.prototype.renderShowLoading=function(){se();this.graph.clear();this.tableElem.innerHTML='<h2 id="loadingHeader">'+f.loading+"Loading ...</h2>";this.footerElem.innerHTML=""};e.prototype.checkoutBranchAction=function(t,e){var i=this;if(e){var s=t.split("/");J("Enter the name of the new branch you would like to create when checking out <b><i>"+x(t)+"</i></b>:",s[s.length-1],"Checkout Branch",function(e){E({command:"checkoutBranch",repo:i.currentRepo,branchName:e,remoteBranch:t})},null)}else{E({command:"checkoutBranch",repo:this.currentRepo,branchName:t,remoteBranch:null})}};e.prototype.makeTableResizable=function(){var s=this;var t=u.getElementById("tableColHeaders"),o=u.getElementsByClassName("tableColHeader");var n=this.gitRepos[this.currentRepo].columnWidths,a=-1,r=-1,e=this;for(var i=0;i<o.length;i++){o[i].innerHTML+=(i>0?'<span class="resizeCol left" data-col="'+(i-1)+'"></span>':"")+(i<o.length-1?'<span class="resizeCol right" data-col="'+i+'"></span>':"")}if(n!==null){h()}else{this.tableElem.className="autoLayout";this.graph.limitMaxWidth(-1);o[0].style.padding="0 "+Math.round((Math.max(this.graph.getWidth()+16,64)-(o[0].offsetWidth-24))/2)+"px"}k("resizeCol","mousedown",function(e){r=parseInt(e.target.dataset.col);a=e.clientX;if(n===null){n=[o[0].clientWidth-24,o[2].clientWidth-24,o[3].clientWidth-24,o[4].clientWidth-24];h()}t.classList.add("resizing")});t.addEventListener("mousemove",function(e){if(r>-1&&n!==null){var t=e;var i=t.clientX-a;switch(r){case 0:if(n[0]+i<40)i=-n[0]+40;if(o[1].clientWidth-i<64)i=o[1].clientWidth-64;n[0]+=i;o[0].style.width=n[0]+"px";s.graph.limitMaxWidth(n[0]+16);break;case 1:if(o[1].clientWidth+i<64)i=-o[1].clientWidth+64;if(n[1]-i<40)i=n[1]-40;n[1]-=i;o[2].style.width=n[1]+"px";break;default:if(n[r-1]+i<40)i=-n[r-1]+40;if(n[r]-i<40)i=n[r]-40;n[r-1]+=i;n[r]-=i;o[r].style.width=n[r-1]+"px";o[r+1].style.width=n[r]+"px"}a=t.clientX}});t.addEventListener("mouseup",l);t.addEventListener("mouseleave",l);function l(){if(r>-1&&n!==null){r=-1;a=-1;t.classList.remove("resizing");e.gitRepos[e.currentRepo].columnWidths=n;E({command:"saveRepoState",repo:e.currentRepo,state:e.gitRepos[e.currentRepo]})}}function h(){if(n!==null){o[0].style.width=n[0]+"px";o[0].style.padding="";o[2].style.width=n[1]+"px";o[3].style.width=n[2]+"px";o[4].style.width=n[3]+"px";e.tableElem.className="fixedLayout";e.graph.limitMaxWidth(n[0]+16)}}};e.prototype.observeWindowSizeChanges=function(){var e=this;var t=s.outerWidth,i=s.outerHeight;s.addEventListener("resize",function(){if(t===s.outerWidth&&i===s.outerHeight){e.renderGraph()}else{t=s.outerWidth;i=s.outerHeight}})};e.prototype.observeWebviewStyleChanges=function(){var t=this;var i=L("--vscode-editor-font-family");new MutationObserver(function(){var e=L("--vscode-editor-font-family");if(e!==i){i=e;t.repoDropdown.refresh();t.branchDropdown.refresh()}}).observe(u.documentElement,{attributes:true,attributeFilter:["style"]})};e.prototype.observeWebviewScroll=function(){var e=this;var t=this.viewElem.scrollTop>0;this.scrollShadowElem.className=t?C:"";this.viewElem.addEventListener("scroll",function(){if(t!==e.viewElem.scrollTop>0){t=e.viewElem.scrollTop>0;e.scrollShadowElem.className=t?C:""}})};e.prototype.observeKeyboardEvents=function(){var n=this;u.addEventListener("keydown",function(e){if(I){if(e.key==="r"&&(e.ctrlKey||e.metaKey)){n.refresh(true)}else if(n.expandedCommit!==null){if(e.key==="Escape"){n.closeCommitDetails(true)}else if(e.key==="ArrowUp"||e.key==="ArrowDown"){var t=-1;if(e.key==="ArrowUp"&&n.commitLookup[n.expandedCommit.hash]>0){t=n.commitLookup[n.expandedCommit.hash]-1}else if(e.key==="ArrowDown"&&n.commitLookup[n.expandedCommit.hash]<n.commits.length-1){t=n.commitLookup[n.expandedCommit.hash]+1}if(t>-1&&n.commits[t].hash!=="*"){e.preventDefault();var i=n.commits[t].hash,s=u.getElementsByClassName("commit");for(var o=0;o<s.length;o++){if(i===s[o].dataset.hash){n.loadCommitDetails(s[o]);break}}}}}}else{if(e.key==="Escape"){se()}else if(e.key==="Enter"&&P!==null){P()}}})};e.prototype.loadCommitDetails=function(e){this.closeCommitDetails(true);this.expandedCommit={id:parseInt(e.dataset.id),hash:e.dataset.hash,srcElem:e,commitDetails:null,fileChanges:null,fileTree:null,compareWithHash:null,compareWithSrcElem:null};this.saveState();E({command:"commitDetails",repo:this.currentRepo,commitHash:this.expandedCommit.hash})};e.prototype.closeCommitDetails=function(e){if(this.expandedCommit!==null){if(this.config.commitDetailsViewLocation==="Inline"){var t=u.getElementById("commitDetails");if(typeof t==="object"&&t!==null)t.remove()}else{u.body.classList.remove(p);this.dockedCommitDetailsView.innerHTML=""}if(typeof this.expandedCommit.srcElem==="object"&&this.expandedCommit.srcElem!==null)this.expandedCommit.srcElem.classList.remove(h);if(typeof this.expandedCommit.compareWithSrcElem==="object"&&this.expandedCommit.compareWithSrcElem!==null)this.expandedCommit.compareWithSrcElem.classList.remove(m);this.expandedCommit=null;if(e){this.saveState();if(this.config.commitDetailsViewLocation==="Inline")this.renderGraph()}}};e.prototype.showCommitDetails=function(e,t){if(this.expandedCommit===null||this.expandedCommit.srcElem===null||this.expandedCommit.hash!==e.hash)return;var i=u.getElementById("commitDetails");if(typeof i==="object"&&i!==null)i.remove();this.expandedCommit.commitDetails=e;this.expandedCommit.fileChanges=e.fileChanges;this.expandedCommit.fileTree=t;this.expandedCommit.srcElem.classList.add(h);this.saveState();this.renderCommitDetailsView()};e.prototype.loadCommitComparison=function(e){if(this.expandedCommit!==null){this.closeCommitComparison(false);this.expandedCommit.compareWithHash=e.dataset.hash;this.expandedCommit.compareWithSrcElem=e;this.saveState();var t=this.getCommitOrder(this.expandedCommit.hash,this.expandedCommit.compareWithHash);E({command:"compareCommits",repo:this.currentRepo,commitHash:this.expandedCommit.hash,compareWithHash:this.expandedCommit.compareWithHash,fromHash:t.from,toHash:t.to})}};e.prototype.closeCommitComparison=function(e){if(this.expandedCommit!==null&&this.expandedCommit.compareWithHash){if(typeof this.expandedCommit.compareWithSrcElem==="object"&&this.expandedCommit.compareWithSrcElem!==null)this.expandedCommit.compareWithSrcElem.classList.remove(m);this.expandedCommit.compareWithHash=null;this.expandedCommit.compareWithSrcElem=null;this.expandedCommit.fileChanges=null;this.expandedCommit.fileTree=null;this.saveState();if(e)E({command:"commitDetails",repo:this.currentRepo,commitHash:this.expandedCommit.hash})}};e.prototype.showCommitComparison=function(e,t,i,s){if(this.expandedCommit===null||this.expandedCommit.srcElem===null||this.expandedCommit.compareWithSrcElem===null||this.expandedCommit.hash!==e||this.expandedCommit.compareWithHash!==t)return;this.expandedCommit.commitDetails=null;this.expandedCommit.fileChanges=i;this.expandedCommit.fileTree=s;this.expandedCommit.srcElem.classList.add(h);this.expandedCommit.compareWithSrcElem.classList.add(m);this.saveState();this.renderCommitDetailsView()};e.prototype.renderCommitDetailsView=function(){var o=this;if(this.expandedCommit===null||this.expandedCommit.srcElem===null)return;var e=this.config.commitDetailsViewLocation!=="Inline";var t=e?this.dockedCommitDetailsView:u.getElementById("commitDetails"),i="";if(t===null){t=u.createElement("tr");t.id="commitDetails";B(t,this.expandedCommit.srcElem)}if(this.expandedCommit.compareWithHash===null){var s=this.expandedCommit.commitDetails;i+='<span class="commitDetailsSummaryTop'+(typeof this.avatars[s.email]==="string"?" withAvatar":"")+'"><span class="commitDetailsSummaryTopRow"><span class="commitDetailsSummaryKeyValues">';i+="<b>Commit: </b>"+x(s.hash)+"<br>";i+="<b>Parents: </b>"+s.parents.join(", ")+"<br>";i+="<b>Author: </b>"+x(s.author)+' &lt;<a href="mailto:'+encodeURIComponent(s.email)+'">'+x(s.email)+"</a>&gt;<br>";i+="<b>Date: </b>"+new Date(s.date*1e3).toString()+"<br>";i+="<b>Committer: </b>"+x(s.committer)+"</span>";if(typeof this.avatars[s.email]==="string")i+='<span class="commitDetailsSummaryAvatar"><img src="'+this.avatars[s.email]+'"></span>';i+="</span></span><br><br>";i+=x(s.body).replace(/\n/g,"<br>")+"</div>";i+='<div id="commitDetailsFiles">'+Y(this.expandedCommit.fileTree,this.expandedCommit.fileChanges)+"</table>";this.renderGraph()}else{var n=this.getCommitOrder(this.expandedCommit.hash,this.expandedCommit.compareWithHash);i+="Displaying all changes from <b>"+n.from+"</b> to <b>"+n.to+"</b></div>";i+='<div id="commitDetailsFiles">'+Y(this.expandedCommit.fileTree,this.expandedCommit.fileChanges)+"</table>"}i='<div id="commitDetailsSummary">'+i+'</div><div id="commitDetailsClose">'+f.close+"</div>";t.innerHTML=e?i:'<td></td><td colspan="4">'+i+"</td>";if(e){u.body.classList.add(p);var a=this.controlsElem.clientHeight+this.expandedCommit.srcElem.offsetTop;if(a-8<this.viewElem.scrollTop){this.viewElem.scroll(0,a-8)}else if(a-this.viewElem.clientHeight+32>this.viewElem.scrollTop){this.viewElem.scroll(0,a-this.viewElem.clientHeight+32)}}else{var a=this.controlsElem.clientHeight+t.offsetTop;if(this.config.autoCenterCommitDetailsView){this.viewElem.scroll(0,a-12+(this.config.grid.expandY-this.viewElem.clientHeight)/2)}else if(a-32<this.viewElem.scrollTop){this.viewElem.scroll(0,a-32)}else if(a+this.config.grid.expandY-this.viewElem.clientHeight+8>this.viewElem.scrollTop){this.viewElem.scroll(0,a+this.config.grid.expandY-this.viewElem.clientHeight+8)}}u.getElementById("commitDetailsClose").addEventListener("click",function(){o.closeCommitDetails(true)});k("gitFolder","click",function(e){var t=e.target.closest(".gitFolder");var i=t.parentElement;i.classList.toggle("closed");var s=!i.classList.contains("closed");i.children[0].children[0].innerHTML=s?f.openFolder:f.closedFolder;i.children[1].classList.toggle("hidden");G(o.expandedCommit.fileTree,decodeURIComponent(t.dataset.folderpath),s);o.saveState()});k("gitFile","click",function(e){var t=e.target.closest(".gitFile");if(o.expandedCommit===null||!t.classList.contains("gitDiffPossible"))return;var i=o.getCommitOrder(o.expandedCommit.hash,o.expandedCommit.compareWithHash===null?o.expandedCommit.hash:o.expandedCommit.compareWithHash);E({command:"viewDiff",repo:o.currentRepo,fromHash:i.from,toHash:i.to,oldFilePath:decodeURIComponent(t.dataset.oldfilepath),newFilePath:decodeURIComponent(t.dataset.newfilepath),type:t.dataset.type})})};e.prototype.getCommitOrder=function(e,t){if(this.commitLookup[e]>this.commitLookup[t]){return{from:e,to:t}}else{return{from:t,to:e}}};return e}();var A=u.getElementById("view"),I=true;var M=u.getElementById("contextMenu"),N=null;var T=u.getElementById("dialog"),W=u.getElementById("dialogBacking"),F=null,P=null;var V=new e(A,viewState.repos,viewState.lastActiveRepo,{autoCenterCommitDetailsView:viewState.autoCenterCommitDetailsView,commitDetailsViewLocation:viewState.commitDetailsViewLocation,fetchAvatars:viewState.fetchAvatars,graphColours:viewState.graphColours,graphStyle:viewState.graphStyle,grid:{x:16,y:24,offsetX:8,offsetY:12,expandY:250},initialLoadCommits:viewState.initialLoadCommits,loadMoreCommits:viewState.loadMoreCommits,showCurrentBranchByDefault:viewState.showCurrentBranchByDefault},t.getState());s.addEventListener("message",function(e){var t=e.data;switch(t.command){case"addTag":O(t.status,"Unable to Add Tag");break;case"checkoutBranch":O(t.status,"Unable to Checkout Branch");break;case"checkoutCommit":O(t.status,"Unable to Checkout Commit");break;case"cherrypickCommit":O(t.status,"Unable to Cherry Pick Commit");break;case"commitDetails":if(t.commitDetails===null){V.closeCommitDetails(true);_("Unable to load commit details",null,null)}else{V.showCommitDetails(t.commitDetails,z(t.commitDetails.fileChanges))}break;case"compareCommits":if(t.fileChanges===null){V.closeCommitComparison(true);_("Unable to compare commits",null,null)}else{V.showCommitComparison(t.commitHash,t.compareWithHash,t.fileChanges,z(t.fileChanges))}break;case"copyToClipboard":if(t.success===false)_("Unable to Copy "+t.type+" to Clipboard",null,null);break;case"createBranch":O(t.status,"Unable to Create Branch");break;case"deleteBranch":O(t.status,"Unable to Delete Branch");break;case"deleteRemoteBranch":O(t.status,"Unable to Delete Remote Branch");break;case"deleteTag":O(t.status,"Unable to Delete Tag");break;case"fetchAvatar":V.loadAvatar(t.email,t.image);break;case"loadBranches":V.loadBranches(t.branches,t.head,t.hard,t.isRepo);break;case"loadCommits":V.loadCommits(t.commits,t.head,t.moreCommitsAvailable,t.hard);break;case"loadRepos":V.loadRepos(t.repos,t.lastActiveRepo);break;case"mergeBranch":O(t.status,"Unable to Merge Branch");break;case"mergeCommit":O(t.status,"Unable to Merge Commit");break;case"pushTag":O(t.status,"Unable to Push Tag");break;case"renameBranch":O(t.status,"Unable to Rename Branch");break;case"refresh":V.refresh(false);break;case"resetToCommit":O(t.status,"Unable to Reset to Commit");break;case"revertCommit":O(t.status,"Unable to Revert Commit");break;case"viewDiff":if(t.success===false)_("Unable to view diff of file",null,null);break}});function O(e,t){if(e===null){V.refresh(true)}else{_(t,e,null)}}function U(e){var t=new Date(e*1e3),i;var s=t.getDate()+" "+r[t.getMonth()]+" "+t.getFullYear();var o=b(t.getHours())+":"+b(t.getMinutes());switch(viewState.dateFormat){case"Date Only":i=s;break;case"Relative":var n=Math.round((new Date).getTime()/1e3)-e,a=void 0;if(n<60){a="second"}else if(n<3600){a="minute";n/=60}else if(n<86400){a="hour";n/=3600}else if(n<604800){a="day";n/=86400}else if(n<2629800){a="week";n/=604800}else if(n<31557600){a="month";n/=2629800}else{a="year";n/=31557600}n=Math.round(n);i=n+" "+a+(n!==1?"s":"")+" ago";break;default:i=s+" "+o}return{title:s+" "+o,value:i}}function z(e){var t={},i,s,o,n;var a={type:"folder",name:"",folderPath:"",contents:t,open:true};for(i=0;i<e.length;i++){n=a;o=e[i].newFilePath.split("/");for(s=0;s<o.length;s++){if(s<o.length-1){if(typeof n.contents[o[s]]==="undefined"){t={};n.contents[o[s]]={type:"folder",name:o[s],folderPath:o.slice(0,s+1).join("/"),contents:t,open:true}}n=n.contents[o[s]]}else{n.contents[o[s]]={type:"file",name:o[s],index:i}}}}return a}function Y(i,e){var t=(i.name!==""?'<span class="gitFolder" data-folderpath="'+encodeURIComponent(i.folderPath)+'"><span class="gitFolderIcon">'+(i.open?f.openFolder:f.closedFolder)+'</span><span class="gitFolderName">'+i.name+"</span></span>":"")+'<ul class="gitFolderContents'+(!i.open?" hidden":"")+'">',s=Object.keys(i.contents),o,n,a;s.sort(function(e,t){return i.contents[e].type==="folder"&&i.contents[t].type==="file"?-1:i.contents[e].type==="file"&&i.contents[t].type==="folder"?1:i.contents[e].name<i.contents[t].name?-1:i.contents[e].name>i.contents[t].name?1:0});for(o=0;o<s.length;o++){if(i.contents[s[o]].type==="folder"){a=i.contents[s[o]];t+="<li"+(!a.open?' class="closed"':"")+">"+Y(a,e)+"</li>"}else{n=e[i.contents[s[o]].index];t+='<li class="gitFile '+n.type+(n.additions!==null&&n.deletions!==null?" gitDiffPossible":"")+'" data-oldfilepath="'+encodeURIComponent(n.oldFilePath)+'" data-newfilepath="'+encodeURIComponent(n.newFilePath)+'" data-type="'+n.type+'"'+(n.additions===null||n.deletions===null?' title="This is a binary file, unable to view diff."':"")+'><span class="gitFileIcon">'+f.file+"</span>"+i.contents[s[o]].name+(n.type==="R"?' <span class="gitFileRename" title="'+x(n.oldFilePath+" was renamed to "+n.newFilePath)+'">R</span>':"")+(n.type!=="A"&&n.type!=="D"&&n.additions!==null&&n.deletions!==null?'<span class="gitFileAddDel">(<span class="gitFileAdditions" title="'+n.additions+" addition"+(n.additions!==1?"s":"")+'">+'+n.additions+'</span>|<span class="gitFileDeletions" title="'+n.deletions+" deletion"+(n.deletions!==1?"s":"")+'">-'+n.deletions+"</span>)</span>":"")+"</li>"}}return t+"</ul>"}function G(e,t,i){var s=t.split("/"),o,n=e;for(o=0;o<s.length;o++){if(typeof n.contents[s[o]]!=="undefined"){n=n.contents[s[o]];if(o===s.length-1){n.open=i;return}}else{return}}}function q(e){return e.substring(0,8)}function X(e,t,i){var s="",o,n=e;for(o=0;o<t.length;o++){s+=t[o]!==null?'<li class="contextMenuItem" data-index="'+o+'">'+t[o].title+"</li>":'<li class="contextMenuDivider"></li>'}oe();M.style.opacity="0";M.className=C;M.innerHTML=s;var a=M.getBoundingClientRect();M.style.left=A.scrollLeft+n.pageX+(n.pageX+a.width<A.clientWidth?-2:2-a.width)+"px";M.style.top=A.scrollTop+n.pageY+(n.pageY+a.height<A.clientHeight?-2:2-a.height)+"px";M.style.opacity="1";k("contextMenuItem","click",function(e){e.stopPropagation();j();t[parseInt(e.target.dataset.index)].onClick()});N=i;N.classList.add(c);I=false}function j(){M.className="";M.innerHTML="";M.style.left="0px";M.style.top="0px";if(N!==null){N.classList.remove(c);N=null}I=true}function K(e,t,i){te(e,"Yes","No",function(){ie();t()},i)}function J(e,t,i,s,o){Z(e,[{type:"text-ref",name:"",default:t}],i,function(e){return s(e[0])},o)}function $(e,t,i,s,o,n){Z(e,[{type:"checkbox",name:t,value:i}],s,function(e){return o(e[0]==="checked")},n)}function Q(e,t,i,s,o,n){Z(e,[{type:"select",name:"",options:i,default:t}],s,function(e){return o(e[0])},n)}function Z(e,o,s,n,t){var i=-1,a=o.length>1;var r=a;if(a){for(var l=0;l<o.length;l++){if(o[l].type!=="checkbox"){r=false;break}}}var h=e+'<br><table class="dialogForm '+(a?r?"multiCheckbox":"multi":"single")+'">';for(var l=0;l<o.length;l++){var m=o[l];h+="<tr>"+(a&&!r?"<td>"+m.name+"</td>":"")+"<td>";if(m.type==="select"){h+='<select id="dialogInput'+l+'">';for(var c=0;c<m.options.length;c++){h+='<option value="'+m.options[c].value+'"'+(m.options[c].value===m.default?" selected":"")+">"+m.options[c].name+"</option>"}h+="</select>"}else if(m.type==="checkbox"){h+='<span class="dialogFormCheckbox"><label><input id="dialogInput'+l+'" type="checkbox"'+(m.value?" checked":"")+"/>"+(a&&!r?"":m.name)+"</label></span>"}else{h+='<input id="dialogInput'+l+'" type="text" value="'+m.default+'"'+(m.type==="text"&&m.placeholder!==null?' placeholder="'+m.placeholder+'"':"")+"/>";if(m.type==="text-ref")i=l}h+="</td></tr>"}h+="</table>";te(h,s,"Cancel",function(){if(T.className===C+" noInput"||T.className===C+" inputInvalid")return;var e=[];for(var t=0;t<o.length;t++){var i=o[t],s=u.getElementById("dialogInput"+t);if(i.type==="select"){e.push(s.value)}else if(i.type==="checkbox"){e.push(s.checked?"checked":"unchecked")}else{e.push(s.value)}}ie();n(e)},t);if(i>-1){var d=u.getElementById("dialogInput"+i),p=u.getElementById("dialogAction");if(d.value==="")T.className=C+" noInput";d.focus();d.addEventListener("keyup",function(){var e=d.value==="",t=d.value.match(g)!==null;var i=C+(e?" noInput":t?" inputInvalid":"");if(T.className!==i){T.className=i;p.title=t?"Unable to "+s+", one or more invalid characters entered.":""}})}}function _(e,t,i){te(f.alert+"Error: "+e+(t!==null?'<br><span class="errorReason">'+x(t).split("\n").join("<br>")+"</span>":""),null,"Dismiss",null,i)}function ee(e){te('<span id="actionRunning">'+f.loading+e+" ...</span>",null,"Dismiss",null,null)}function te(e,t,i,s,o){W.className=C;T.className=C;T.innerHTML=e+"<br>"+(t!==null?'<div id="dialogAction" class="roundedBtn">'+t+"</div>":"")+'<div id="dialogDismiss" class="roundedBtn">'+i+"</div>";if(t!==null&&s!==null){u.getElementById("dialogAction").addEventListener("click",s);P=s}u.getElementById("dialogDismiss").addEventListener("click",ie);F=o;if(F!==null)F.classList.add(d);I=false}function ie(){W.className="";T.className="";T.innerHTML="";if(F!==null){F.classList.remove(d);F=null}P=null;I=true}function se(){if(T.classList.contains(C))ie();if(M.classList.contains(C))j()}u.addEventListener("click",oe);u.addEventListener("contextmenu",oe);u.addEventListener("mouseleave",oe);function oe(){if(M.classList.contains(C))j()}})(document,window);