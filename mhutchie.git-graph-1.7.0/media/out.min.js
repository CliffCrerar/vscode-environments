"use strict";(function(B,o){var t=acquireVsCodeApi();var L={alert:'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"/></svg>',branch:'<svg xmlns="http://www.w3.org/2000/svg" width="10" height="16" viewBox="0 0 10 16"><path fill-rule="evenodd" d="M10 5c0-1.11-.89-2-2-2a1.993 1.993 0 0 0-1 3.72v.3c-.02.52-.23.98-.63 1.38-.4.4-.86.61-1.38.63-.83.02-1.48.16-2 .45V4.72a1.993 1.993 0 0 0-1-3.72C.88 1 0 1.89 0 3a2 2 0 0 0 1 1.72v6.56c-.59.35-1 .99-1 1.72 0 1.11.89 2 2 2 1.11 0 2-.89 2-2 0-.53-.2-1-.53-1.36.09-.06.48-.41.59-.47.25-.11.56-.17.94-.17 1.05-.05 1.95-.45 2.75-1.25S8.95 7.77 9 6.73h-.02C9.59 6.37 10 5.73 10 5zM2 1.8c.66 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2C1.35 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2zm0 12.41c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm6-8c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>',check:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"></path></svg>',close:'<svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>',download:'<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M9 12h2l-3 3-3-3h2V7h2v5zm3-8c0-.44-.91-3-4.5-3C5.08 1 3 2.92 3 5 1.02 5 0 6.52 0 8c0 1.53 1 3 3 3h3V9.7H3C1.38 9.7 1.3 8.28 1.3 8c0-.17.05-1.7 1.7-1.7h1.3V5c0-1.39 1.56-2.7 3.2-2.7 2.55 0 3.13 1.55 3.2 1.8v1.2H12c.81 0 2.7.22 2.7 2.2 0 2.09-2.25 2.2-2.7 2.2h-2V11h2c2.08 0 4-1.16 4-3.5C16 5.06 14.08 4 12 4z"/></svg>',info:'<svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"/></svg>',tag:'<svg xmlns="http://www.w3.org/2000/svg" width="15" height="16" viewBox="0 0 15 16"><path fill-rule="evenodd" d="M7.73 1.73C7.26 1.26 6.62 1 5.96 1H3.5C2.13 1 1 2.13 1 3.5v2.47c0 .66.27 1.3.73 1.77l6.06 6.06c.39.39 1.02.39 1.41 0l4.59-4.59a.996.996 0 0 0 0-1.41L7.73 1.73zM2.38 7.09c-.31-.3-.47-.7-.47-1.13V3.5c0-.88.72-1.59 1.59-1.59h2.47c.42 0 .83.16 1.13.47l6.14 6.13-4.73 4.73-6.13-6.15zM3.01 3h2v2H3V3h.01z"/></svg>',loading:'<svg xmlns="http://www.w3.org/2000/svg" width="24" height="32" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M10.24 7.4a4.15 4.15 0 0 1-1.2 3.6 4.346 4.346 0 0 1-5.41.54L4.8 10.4.5 9.8l.6 4.2 1.31-1.26c2.36 1.74 5.7 1.57 7.84-.54a5.876 5.876 0 0 0 1.74-4.46l-1.75-.34zM2.96 5a4.346 4.346 0 0 1 5.41-.54L7.2 5.6l4.3.6-.6-4.2-1.31 1.26c-2.36-1.74-5.7-1.57-7.85.54C.5 5.03-.06 6.65.01 8.26l1.75.35A4.17 4.17 0 0 1 2.96 5z"/></svg>',refresh:'<svg xmlns="http://www.w3.org/2000/svg" width="28" height="28" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M 8.244,15.672 C 11.441,15.558 14.868,13.024 14.828,8.55 14.773,6.644 13.911,4.852 12.456,3.619 l -1.648,1.198 c 1.265,0.861 2.037,2.279 2.074,3.809 0.016,2.25 -1.808,5.025 -4.707,5.077 -2.898,0.052 -4.933,-2.08 -5.047,-4.671 C 3.07,6.705 4.635,4.651 6.893,4.088 l 0.041,1.866 3.853,-3.126 -3.978,-2.772 0.032,2.077 c -3.294,0.616 -5.755,3.541 -5.667,6.982 -3.88e-4,4.233 3.873,6.670 7.07,6.557 z"/></svg>',openFolder:'<svg xmlns="http://www.w3.org/2000/svg" class="openFolderIcon" viewBox="0 0 30 30"><path d="M 5 4 C 3.895 4 3 4.895 3 6 L 3 9 L 3 11 L 22 11 L 27 11 L 27 8 C 27 6.895 26.105 6 25 6 L 12.199219 6 L 11.582031 4.9707031 C 11.221031 4.3687031 10.570187 4 9.8671875 4 L 5 4 z M 2.5019531 13 C 1.4929531 13 0.77040625 13.977406 1.0664062 14.941406 L 4.0351562 24.587891 C 4.2941563 25.426891 5.0692656 26 5.9472656 26 L 15 26 L 24.052734 26 C 24.930734 26 25.705844 25.426891 25.964844 24.587891 L 28.933594 14.941406 C 29.229594 13.977406 28.507047 13 27.498047 13 L 15 13 L 2.5019531 13 z"/></svg>',closedFolder:'<svg xmlns="http://www.w3.org/2000/svg" class="closedFolderIcon" viewBox="0 0 30 30"><path d="M 4 3 C 2.895 3 2 3.895 2 5 L 2 8 L 13 8 L 28 8 L 28 7 C 28 5.895 27.105 5 26 5 L 11.199219 5 L 10.582031 3.9707031 C 10.221031 3.3687031 9.5701875 3 8.8671875 3 L 4 3 z M 3 10 C 2.448 10 2 10.448 2 11 L 2 23 C 2 24.105 2.895 25 4 25 L 26 25 C 27.105 25 28 24.105 28 23 L 28 11 C 28 10.448 27.552 10 27 10 L 3 10 z"/></svg>',file:'<svg xmlns="http://www.w3.org/2000/svg" class="fileIcon" viewBox="0 0 30 30"><path d="M24.707,8.793l-6.5-6.5C18.019,2.105,17.765,2,17.5,2H7C5.895,2,5,2.895,5,4v22c0,1.105,0.895,2,2,2h16c1.105,0,2-0.895,2-2 V9.5C25,9.235,24.895,8.981,24.707,8.793z M18,10c-0.552,0-1-0.448-1-1V3.904L23.096,10H18z"/></svg>'};var r=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];var i={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","/":"&#x2F;"};var s={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#x27;":"'","&#x2F;":"/"};var n=/[&<>"'\/]/g;var a=/&lt;|&gt;|&amp;|&quot;|&#x27;|&#x2F;/g;var p=/^[-\/].*|[\\" ><~^:?*[]|\.\.|\/\/|\/\.|@{|[.\/]$|\.lock$|^@$/g;var E="&#8230;";var l="http://www.w3.org/2000/svg";var R="*";var h="";var u=-100;var f=-101;var g=40;var v=24;var C="active";var c="branchLabelsAlignedToGraph";var m="commitDetailsOpen";var d="compareCommitOpen";var b="contextMenuActive";var y="dialogActive";var x="dockedCommitDetailsViewOpen";var w="tagLabelsRightAligned";function k(e,t,i){if(e.length!==t.length)return false;for(var s=0;s<e.length;s++){if(!i(e[s],t[s]))return false}return true}function S(e,t){if(e.length!==t.length)return false;for(var i=0;i<e.length;i++){if(e[i]!==t[i])return false}return true}function H(e){return e>9?e:"0"+e}function D(e){return e.replace(n,function(e){return i[e]})}function A(e){return e.replace(a,function(e){return s[e]})}function T(e,t,i){var s=B.getElementsByClassName(e),o;for(o=0;o<s.length;o++){s[o].addEventListener(t,i)}}function I(e,t){t.parentNode.insertBefore(e,t.nextSibling)}function M(e,t,i){if(e.classList.contains(t)!==i){if(i){e.classList.add(t)}else{e.classList.remove(t)}}}function N(e){t.postMessage(e)}function F(e){return B.documentElement.style.getPropertyValue(e)}var W=function(){function e(e,t,i,s,o){var a=this;this.options=[];this.optionsSelected=[];this.lastSelected=0;this.numSelected=0;this.dropdownVisible=false;this.showInfo=t;this.multipleAllowed=i;this.changeCallback=o;this.elem=B.getElementById(e);this.menuElem=B.createElement("div");this.menuElem.className="dropdownMenu";var n=this.menuElem.appendChild(B.createElement("div"));n.className="dropdownFilter";this.filterInput=n.appendChild(B.createElement("input"));this.filterInput.className="dropdownFilterInput";this.filterInput.placeholder="Filter "+s+"...";this.optionsElem=this.menuElem.appendChild(B.createElement("div"));this.optionsElem.className="dropdownOptions";this.noResultsElem=this.menuElem.appendChild(B.createElement("div"));this.noResultsElem.className="dropdownNoResults";this.noResultsElem.innerHTML="No results found.";this.currentValueElem=this.elem.appendChild(B.createElement("div"));this.currentValueElem.className="dropdownCurrentValue";M(this.elem,"multi",i);this.elem.appendChild(this.menuElem);B.addEventListener("click",function(e){if(!e.target)return;if(e.target===a.currentValueElem){a.dropdownVisible=!a.dropdownVisible;if(a.dropdownVisible){a.filterInput.value="";a.filter()}a.elem.classList.toggle("dropdownOpen");if(a.dropdownVisible)a.filterInput.focus()}else if(a.dropdownVisible){if(e.target.closest(".dropdown")!==a.elem){a.close()}else{var t=e.target.closest(".dropdownOption");if(t!==null&&t.parentNode===a.optionsElem&&typeof t.dataset.id!=="undefined"){var i=parseInt(t.dataset.id),s=false;if(a.multipleAllowed){if(i===0){if(!a.optionsSelected[0]){a.optionsSelected[0]=true;for(var o=1;o<a.optionsSelected.length;o++){a.optionsSelected[o]=false}a.numSelected=1;s=true}}else{if(a.optionsSelected[0]){a.optionsSelected[0]=false;a.numSelected--}a.numSelected+=a.optionsSelected[i]?-1:1;a.optionsSelected[i]=!a.optionsSelected[i];if(a.numSelected===0){a.optionsSelected[0]=true;a.numSelected=1}s=true}if(s&&a.optionsSelected[i])a.lastSelected=i}else{a.close();if(a.lastSelected!==i){a.optionsSelected[a.lastSelected]=false;a.optionsSelected[i]=true;a.lastSelected=i;s=true}}if(s){var n=a.menuElem.scrollTop;a.render();if(a.dropdownVisible&&a.multipleAllowed)a.menuElem.scroll(0,n);a.changeCallback(a.getSelectedOptions(false))}}}}},true);B.addEventListener("contextmenu",function(){return a.close()},true);B.addEventListener("keyup",function(e){if(e.key==="Escape")a.close()},true);this.filterInput.addEventListener("keyup",function(){return a.filter()})}e.prototype.setOptions=function(e,t){this.options=e;this.optionsSelected=[];this.numSelected=0;var i=-1,s;for(var o=0;o<e.length;o++){s=t.indexOf(e[o].value)>-1;this.optionsSelected[o]=s;if(s){i=o;this.numSelected++}}if(i===-1){i=0;this.optionsSelected[i]=true;this.numSelected++}this.lastSelected=i;if(this.dropdownVisible&&e.length<=1)this.close();this.render()};e.prototype.refresh=function(){if(this.options.length>0)this.render()};e.prototype.render=function(){this.elem.classList.add("loaded");this.currentValueElem.innerHTML=this.getCurrentValueText();var e="";for(var t=0;t<this.options.length;t++){e+='<div class="dropdownOption'+(this.optionsSelected[t]?" selected":"")+'" data-id="'+t+'">'+(this.multipleAllowed&&this.optionsSelected[t]?'<div class="dropdownOptionMultiSelected">'+L.check+"</div>":"")+D(this.options[t].name)+(this.showInfo?'<div class="dropdownOptionInfo" title="'+D(this.options[t].value)+'">'+L.info+"</div>":"")+"</div>"}this.optionsElem.className="dropdownOptions"+(this.showInfo?" showInfo":"");this.optionsElem.innerHTML=e;this.filterInput.style.display="none";this.noResultsElem.style.display="none";this.menuElem.style.cssText="opacity:0; display:block;";this.currentValueElem.style.width=Math.max(this.menuElem.offsetWidth+((this.showInfo||this.multipleAllowed)&&this.menuElem.offsetHeight<272?0:12),138)+"px";this.menuElem.style.cssText="right:0; overflow-y:auto; max-height:297px;";if(this.dropdownVisible)this.filter()};e.prototype.filter=function(){var e=this.filterInput.value.toLowerCase(),t,i=false;for(var s=0;s<this.options.length;s++){t=this.options[s].name.toLowerCase().indexOf(e)>-1;this.optionsElem.children[s].style.display=t?"block":"none";if(t)i=true}this.filterInput.style.display="block";this.noResultsElem.style.display=i?"none":"block"};e.prototype.close=function(){this.elem.classList.remove("dropdownOpen");this.dropdownVisible=false};e.prototype.getSelectedOptions=function(e){var t=[];for(var i=0;i<this.options.length;i++){if(this.optionsSelected[i])t.push(e?this.options[i].name:this.options[i].value)}return t};e.prototype.getCurrentValueText=function(){var e="",t=this.getSelectedOptions(true);for(var i=0;i<t.length;i++){e+=(i>0?i<t.length-1?", ":" & ":"")+t[i]}return e};return e}();var P=function(){function e(e){this.lines=[];this.end=0;this.numUncommitted=0;this.colour=e}e.prototype.addLine=function(e,t,i,s){this.lines.push({p1:e,p2:t,lockedFirst:s});if(i){if(t.y<this.numUncommitted)this.numUncommitted=t.y}else{this.numUncommitted++}};e.prototype.getColour=function(){return this.colour};e.prototype.getEnd=function(){return this.end};e.prototype.setEnd=function(e){this.end=e};e.prototype.draw=function(e,t,i){var s=t.graphColours[this.colour%t.graphColours.length],o,n,a,r,l,h=[],c="",m="",d=t.grid.y*(t.graphStyle==="angular"?.38:.8);for(o=0;o<this.lines.length;o++){n=this.lines[o].p1.x*t.grid.x+t.grid.offsetX;a=this.lines[o].p1.y*t.grid.y+t.grid.offsetY;r=this.lines[o].p2.x*t.grid.x+t.grid.offsetX;l=this.lines[o].p2.y*t.grid.y+t.grid.offsetY;if(i>-1){if(this.lines[o].p1.y>i){a+=t.grid.expandY;l+=t.grid.expandY}else if(this.lines[o].p2.y>i){if(n===r){l+=t.grid.expandY}else if(this.lines[o].lockedFirst){h.push({p1:{x:n,y:a},p2:{x:r,y:l},isCommitted:o>=this.numUncommitted,lockedFirst:this.lines[o].lockedFirst});h.push({p1:{x:r,y:a+t.grid.y},p2:{x:r,y:l+t.grid.expandY},isCommitted:o>=this.numUncommitted,lockedFirst:this.lines[o].lockedFirst});continue}else{h.push({p1:{x:n,y:a},p2:{x:n,y:l-t.grid.y+t.grid.expandY},isCommitted:o>=this.numUncommitted,lockedFirst:this.lines[o].lockedFirst});a+=t.grid.expandY;l+=t.grid.expandY}}}h.push({p1:{x:n,y:a},p2:{x:r,y:l},isCommitted:o>=this.numUncommitted,lockedFirst:this.lines[o].lockedFirst})}o=0;while(o<h.length-1){if(h[o].p1.x===h[o].p2.x&&h[o].p2.x===h[o+1].p1.x&&h[o+1].p1.x===h[o+1].p2.x&&h[o].p2.y===h[o+1].p1.y&&h[o].isCommitted===h[o+1].isCommitted){h[o].p2.y=h[o+1].p2.y;h.splice(o+1,1)}else{o++}}for(o=0;o<h.length;o++){n=h[o].p1.x;a=h[o].p1.y;r=h[o].p2.x;l=h[o].p2.y;if(c!==""&&o>0&&h[o].isCommitted!==h[o-1].isCommitted){this.drawPath(e,c,m);c="";m=""}if(c===""||o>0&&(n!==h[o-1].p2.x||a!==h[o-1].p2.y))c+="M"+n.toFixed(0)+","+a.toFixed(1);if(m==="")m=h[o].isCommitted?s:"#808080";if(n===r){c+="L"+r.toFixed(0)+","+l.toFixed(1)}else{if(t.graphStyle==="angular"){c+="L"+(h[o].lockedFirst?r.toFixed(0)+","+(l-d).toFixed(1):n.toFixed(0)+","+(a+d).toFixed(1))+"L"+r.toFixed(0)+","+l.toFixed(1)}else{c+="C"+n.toFixed(0)+","+(a+d).toFixed(1)+" "+r.toFixed(0)+","+(l-d).toFixed(1)+" "+r.toFixed(0)+","+l.toFixed(1)}}}this.drawPath(e,c,m)};e.prototype.drawPath=function(e,t,i){var s=e.appendChild(B.createElementNS(l,"path")),o=e.appendChild(B.createElementNS(l,"path"));s.setAttribute("class","shadow");s.setAttribute("d",t);o.setAttribute("class","line");o.setAttribute("d",t);o.setAttribute("stroke",i)};return e}();var V=function(){function e(e){this.x=0;this.parents=[];this.nextParent=0;this.onBranch=null;this.isCommitted=true;this.isCurrent=false;this.nextX=0;this.connections=[];this.y=e}e.prototype.addParent=function(e){this.parents.push(e)};e.prototype.hasParents=function(){return this.parents.length>0};e.prototype.getNextParent=function(){if(this.nextParent<this.parents.length)return this.parents[this.nextParent];return null};e.prototype.getLastParent=function(){if(this.nextParent<1)return null;return this.parents[this.nextParent-1]};e.prototype.registerParentProcessed=function(){this.nextParent++};e.prototype.isMerge=function(){return this.parents.length>1};e.prototype.addToBranch=function(e,t){if(this.onBranch===null){this.onBranch=e;this.x=t}};e.prototype.isNotOnBranch=function(){return this.onBranch===null};e.prototype.isOnThisBranch=function(e){return this.onBranch===e};e.prototype.getBranch=function(){return this.onBranch};e.prototype.getPoint=function(){return{x:this.x,y:this.y}};e.prototype.getNextPoint=function(){return{x:this.nextX,y:this.y}};e.prototype.getIsCommitted=function(){return this.isCommitted};e.prototype.getPointConnectingTo=function(e,t){for(var i=0;i<this.connections.length;i++){if(this.connections[i].connectsTo===e&&this.connections[i].onBranch===t)return{x:i,y:this.y}}return null};e.prototype.registerUnavailablePoint=function(e,t,i){if(e===this.nextX){this.nextX=e+1;this.connections[e]={connectsTo:t,onBranch:i}}};e.prototype.getColour=function(){return this.onBranch!==null?this.onBranch.getColour():0};e.prototype.setNotCommited=function(){this.isCommitted=false};e.prototype.setCurrent=function(){this.isCurrent=true};e.prototype.draw=function(e,t,i){if(this.onBranch===null)return;var s=e.appendChild(B.createElementNS(l,"circle"));var o=this.isCommitted?t.graphColours[this.onBranch.getColour()%t.graphColours.length]:"#808080";s.setAttribute("cx",(this.x*t.grid.x+t.grid.offsetX).toString());s.setAttribute("cy",(this.y*t.grid.y+t.grid.offsetY+(i?t.grid.expandY:0)).toString());s.setAttribute("r","4");if(this.isCurrent){s.setAttribute("class","current");s.setAttribute("stroke",o)}else{s.setAttribute("fill",o)}};return e}();var U=function(){function e(e,t){this.svgGroup=null;this.maxWidth=-1;this.vertices=[];this.branches=[];this.availableColours=[];this.config=t;this.svg=B.createElementNS(l,"svg");var i=this.svg.appendChild(B.createElementNS(l,"defs"));var s=i.appendChild(B.createElementNS(l,"linearGradient"));s.setAttribute("id","GraphGradient");this.svgGradientStop1=s.appendChild(B.createElementNS(l,"stop"));this.svgGradientStop1.setAttribute("stop-color","white");this.svgGradientStop2=s.appendChild(B.createElementNS(l,"stop"));this.svgGradientStop2.setAttribute("stop-color","black");var o=i.appendChild(B.createElementNS(l,"mask"));o.setAttribute("id","GraphMask");this.svgMaskRect=o.appendChild(B.createElementNS(l,"rect"));this.svgMaskRect.setAttribute("fill","url(#GraphGradient)");this.setDimensions(0,0);B.getElementById(e).appendChild(this.svg)}e.prototype.loadCommits=function(e,t,i){this.vertices=[];this.branches=[];this.availableColours=[];var s,o;for(s=0;s<e.length;s++){this.vertices.push(new V(s))}for(s=0;s<e.length;s++){for(o=0;o<e[s].parentHashes.length;o++){if(typeof i[e[s].parentHashes[o]]==="number"){this.vertices[s].addParent(this.vertices[i[e[s].parentHashes[o]]])}}}if(e.length>0){if(e[0].hash==="*"){this.vertices[0].setCurrent();this.vertices[0].setNotCommited()}else if(t!==null&&typeof i[t]==="number"){this.vertices[i[t]].setCurrent()}}while((s=this.findStart())!==-1){this.determinePath(s)}};e.prototype.render=function(e){var t=B.createElementNS(l,"g"),i,s=this.getWidth();t.setAttribute("mask","url(#GraphMask)");for(i=0;i<this.branches.length;i++){this.branches[i].draw(t,this.config,e!==null?e.id:-1)}for(i=0;i<this.vertices.length;i++){this.vertices[i].draw(t,this.config,e!==null&&i>e.id)}if(this.svgGroup!==null)this.svg.removeChild(this.svgGroup);this.svg.appendChild(t);this.svgGroup=t;this.setDimensions(s,this.getHeight(e));this.applyMaxWidth(s)};e.prototype.clear=function(){if(this.svgGroup!==null){this.svg.removeChild(this.svgGroup);this.svgGroup=null;this.setDimensions(0,0)}};e.prototype.getWidth=function(){var e=0,t,i;for(t=0;t<this.vertices.length;t++){i=this.vertices[t].getNextPoint();if(i.x>e)e=i.x}return e*this.config.grid.x};e.prototype.getHeight=function(e){return this.vertices.length*this.config.grid.y+this.config.grid.offsetY-this.config.grid.y/2+(e!==null?this.config.grid.expandY:0)};e.prototype.getVertexColours=function(){var e=[],t;for(t=0;t<this.vertices.length;t++){e[t]=this.vertices[t].getColour()%this.config.graphColours.length}return e};e.prototype.getWidthsAtVertices=function(){var e=[],t;for(t=0;t<this.vertices.length;t++){e[t]=(this.vertices[t].getNextPoint().x+1)*this.config.grid.x-2}return e};e.prototype.limitMaxWidth=function(e){this.maxWidth=e;this.applyMaxWidth(this.getWidth())};e.prototype.setDimensions=function(e,t){this.svg.setAttribute("width",e.toString());this.svg.setAttribute("height",t.toString());this.svgMaskRect.setAttribute("width",e.toString());this.svgMaskRect.setAttribute("height",t.toString())};e.prototype.applyMaxWidth=function(e){var t=this.maxWidth>-1?(this.maxWidth-12)/e:1;var i=this.maxWidth>-1?this.maxWidth/e:1;this.svgGradientStop1.setAttribute("offset",t.toString());this.svgGradientStop2.setAttribute("offset",i.toString())};e.prototype.determinePath=function(e){var t=e;var i=this.vertices[t],s=this.vertices[t].getNextParent();var o=i.isNotOnBranch()?i.getNextPoint():i.getPoint(),n;if(s!==null&&i.isMerge()&&!i.isNotOnBranch()&&!s.isNotOnBranch()){var a=false,r=s.getBranch();for(t=e+1;t<this.vertices.length;t++){n=this.vertices[t].getPointConnectingTo(s,r);if(n!==null){a=true}else{n=this.vertices[t].getNextPoint()}r.addLine(o,n,i.getIsCommitted(),!a&&this.vertices[t]!==s?o.x<n.x:true);this.vertices[t].registerUnavailablePoint(n.x,s,r);o=n;if(a){i.registerParentProcessed();break}}}else{var l=new P(this.getAvailableColour(e));i.addToBranch(l,o.x);i.registerUnavailablePoint(o.x,i,l);for(t=e+1;t<this.vertices.length;t++){n=s===this.vertices[t]&&!s.isNotOnBranch()?this.vertices[t].getPoint():this.vertices[t].getNextPoint();l.addLine(o,n,i.getIsCommitted(),o.x<n.x);this.vertices[t].registerUnavailablePoint(n.x,s,l);o=n;if(s===this.vertices[t]){i.registerParentProcessed();var h=!s.isNotOnBranch();s.addToBranch(l,n.x);i=s;s=i.getNextParent();if(h)break}}l.setEnd(t);this.branches.push(l);this.availableColours[l.getColour()]=t}};e.prototype.findStart=function(){for(var e=0;e<this.vertices.length;e++){if(this.vertices[e].getNextParent()!==null||this.vertices[e].isNotOnBranch())return e}return-1};e.prototype.getAvailableColour=function(e){for(var t=0;t<this.availableColours.length;t++){if(e>this.availableColours[t]){return t}}this.availableColours.push(0);return this.availableColours.length-1};return e}();var e=function(){function e(e,t,i,s,o,n){var a=this;this.gitBranches=[];this.gitBranchHead=null;this.gitRemotes=[];this.commits=[];this.commitHead=null;this.commitLookup={};this.avatars={};this.currentBranches=null;this.moreCommitsAvailable=false;this.showRemoteBranches=true;this.expandedCommit=null;this.scrollTop=0;this.loadBranchesCallback=null;this.loadCommitsCallback=null;this.gitRepos=t;this.config=o;this.maxCommits=o.initialLoadCommits;this.graph=new U("commitGraph",this.config);this.viewElem=e;this.controlsElem=B.getElementById("controls");this.tableElem=B.getElementById("commitTable");this.footerElem=B.getElementById("footer");this.repoDropdown=new W("repoSelect",true,false,"Repos",function(e){a.currentRepo=e[0];a.maxCommits=a.config.initialLoadCommits;a.gitRemotes=[];M(a.controlsElem,"fetchSupported",false);a.closeCommitDetails(false);a.currentBranches=null;a.saveState();a.refresh(true)});this.branchDropdown=new W("branchSelect",false,true,"Branches",function(e){a.currentBranches=e;a.maxCommits=a.config.initialLoadCommits;a.closeCommitDetails(false);a.saveState();a.renderShowLoading();a.requestLoadCommits(true,function(){})});this.showRemoteBranchesElem=B.getElementById("showRemoteBranchesCheckbox");this.showRemoteBranchesElem.addEventListener("change",function(){a.showRemoteBranches=a.showRemoteBranchesElem.checked;a.saveState();a.refresh(true)});this.dockedCommitDetailsView=B.getElementById("dockedCommitDetailsView");this.scrollShadowElem=B.getElementById("scrollShadow");M(B.body,c,o.branchLabelsAlignedToGraph);M(B.body,w,o.tagLabelsOnRight);this.observeWindowSizeChanges();this.observeWebviewStyleChanges();this.observeWebviewScroll();this.observeKeyboardEvents();this.renderShowLoading();if(n){this.showRemoteBranches=n.showRemoteBranches;this.showRemoteBranchesElem.checked=this.showRemoteBranches;if(typeof this.gitRepos[n.currentRepo]!=="undefined"){this.currentRepo=n.currentRepo;this.currentBranches=n.currentBranches;this.maxCommits=n.maxCommits;this.expandedCommit=n.expandedCommit;this.avatars=n.avatars;this.loadBranches(n.gitBranches,n.gitBranchHead,true,true);this.loadCommits(n.commits,n.commitHead,n.gitRemotes,n.moreCommitsAvailable,true);this.scrollTop=n.scrollTop;this.viewElem.scroll(0,this.scrollTop)}}this.loadRepos(this.gitRepos,i,s);this.requestLoadBranchesAndCommits(false);var r=B.getElementById("refreshBtn"),l=B.getElementById("fetchBtn");r.innerHTML=L.refresh;r.addEventListener("click",function(){a.refresh(true)});l.innerHTML=L.download;l.addEventListener("click",function(){me("Fetching from Remote(s)");N({command:"fetch",repo:a.currentRepo})})}e.prototype.loadRepos=function(e,t,i){this.gitRepos=e;this.saveState();var s=Object.keys(e),o=false;if(i!==null&&this.currentRepo!==i&&typeof e[i]!=="undefined"){this.currentRepo=i;this.saveState();o=true}else if(typeof e[this.currentRepo]==="undefined"){this.currentRepo=t!==null&&typeof e[t]!=="undefined"?t:s[0];this.saveState();o=true}var n=[],a,r;for(r=0;r<s.length;r++){a=s[r].split("/");n.push({name:a[a.length-1],value:s[r]})}B.getElementById("repoControl").style.display=s.length>1?"inline":"none";this.repoDropdown.setOptions(n,[this.currentRepo]);if(o){this.refresh(true)}};e.prototype.loadBranches=function(e,t,i,s){if(!s||!i&&S(this.gitBranches,e)&&this.gitBranchHead===t){this.triggerLoadBranchesCallback(false,s);return}this.gitBranches=e;this.gitBranchHead=t;var o=[];for(var n=0;n<this.config.customBranchGlobPatterns.length;n++){o.push(this.config.customBranchGlobPatterns[n].glob)}if(this.currentBranches!==null&&!(this.currentBranches.length===1&&this.currentBranches[0]===h)){var n=0;while(n<this.currentBranches.length){if(e.indexOf(this.currentBranches[n])===-1&&o.indexOf(this.currentBranches[n])===-1){this.currentBranches.splice(n,1)}else{n++}}if(this.currentBranches.length===0)this.currentBranches=null}if(this.currentBranches===null){this.currentBranches=[this.config.showCurrentBranchByDefault&&this.gitBranchHead!==null?this.gitBranchHead:h]}this.saveState();var a=[{name:"Show All",value:h}];for(var n=0;n<this.config.customBranchGlobPatterns.length;n++){a.push({name:"Glob: "+D(this.config.customBranchGlobPatterns[n].name),value:this.config.customBranchGlobPatterns[n].glob})}for(var n=0;n<this.gitBranches.length;n++){a.push({name:this.gitBranches[n].indexOf("remotes/")===0?this.gitBranches[n].substring(8):this.gitBranches[n],value:this.gitBranches[n]})}this.branchDropdown.setOptions(a,this.currentBranches);this.triggerLoadBranchesCallback(true,s)};e.prototype.triggerLoadBranchesCallback=function(e,t){if(this.loadBranchesCallback!==null){this.loadBranchesCallback(e,t);this.loadBranchesCallback=null}};e.prototype.loadCommits=function(e,t,i,s,o){if(!o&&this.moreCommitsAvailable===s&&this.commitHead===t&&k(this.commits,e,function(e,t){return e.hash===t.hash&&S(e.heads,t.heads)&&S(e.tags,t.tags)&&k(e.remotes,t.remotes,function(e,t){return e.name===t.name&&e.remote===t.remote})&&S(e.parentHashes,t.parentHashes)})&&S(this.gitRemotes,i)){if(this.commits.length>0&&this.commits[0].hash===R){this.commits[0]=e[0];this.saveState();this.renderUncommittedChanges();if(this.expandedCommit!==null&&this.expandedCommit.srcElem!==null){if(this.expandedCommit.compareWithHash===null){if(this.expandedCommit.hash===R){this.requestCommitDetails(this.expandedCommit.hash)}}else{if(this.expandedCommit.compareWithSrcElem!==null&&(this.expandedCommit.hash===R||this.expandedCommit.compareWithHash===R)){this.requestCommitComparison(this.expandedCommit.hash,this.expandedCommit.compareWithHash)}}}}this.triggerLoadCommitsCallback(false);return}this.moreCommitsAvailable=s;this.commits=e;this.commitHead=t;this.gitRemotes=i;this.commitLookup={};this.saveState();var n,a=false,r=false,l={};for(n=0;n<this.commits.length;n++){this.commitLookup[this.commits[n].hash]=n;if(this.expandedCommit!==null){if(this.expandedCommit.hash===this.commits[n].hash){a=true}else if(this.expandedCommit.compareWithHash===this.commits[n].hash){r=true}}if(this.config.fetchAvatars&&typeof this.avatars[this.commits[n].email]!=="string"&&this.commits[n].email!==""){if(typeof l[this.commits[n].email]==="undefined"){l[this.commits[n].email]=[this.commits[n].hash]}else{l[this.commits[n].email].push(this.commits[n].hash)}}}this.graph.loadCommits(this.commits,this.commitHead,this.commitLookup);if(this.expandedCommit!==null&&(!a||this.expandedCommit.compareWithHash!==null&&!r)){this.closeCommitDetails(false);this.saveState()}this.render();this.triggerLoadCommitsCallback(true);this.fetchAvatars(l)};e.prototype.triggerLoadCommitsCallback=function(e){if(this.loadCommitsCallback!==null){this.loadCommitsCallback(e);this.loadCommitsCallback=null}};e.prototype.loadAvatar=function(e,t){this.avatars[e]=t;this.saveState();var i=B.getElementsByClassName("avatar"),s=D(e);for(var o=0;o<i.length;o++){if(i[o].dataset.email===s){i[o].innerHTML='<img class="avatarImg" src="'+t+'">'}}};e.prototype.refresh=function(e){if(e){if(this.expandedCommit!==null){this.closeCommitDetails(false);this.saveState()}this.renderShowLoading()}this.requestLoadBranchesAndCommits(e)};e.prototype.requestLoadBranches=function(e,t){if(this.loadBranchesCallback!==null)return;this.loadBranchesCallback=t;N({command:"loadBranches",repo:this.currentRepo,showRemoteBranches:this.showRemoteBranches,hard:e})};e.prototype.requestLoadCommits=function(e,t){if(this.loadCommitsCallback!==null)return;this.loadCommitsCallback=t;N({command:"loadCommits",repo:this.currentRepo,branches:this.currentBranches===null||this.currentBranches.length===1&&this.currentBranches[0]===h?null:this.currentBranches,maxCommits:this.maxCommits,showRemoteBranches:this.showRemoteBranches,hard:e})};e.prototype.requestLoadBranchesAndCommits=function(i){var s=this;this.requestLoadBranches(i,function(t,e){if(e){s.requestLoadCommits(i,function(e){if(!i&&(t||e)){pe()}})}else{N({command:"loadRepos",check:true})}})};e.prototype.requestCommitDetails=function(e){N({command:"commitDetails",repo:this.currentRepo,commitHash:e})};e.prototype.requestCommitComparison=function(e,t){var i=this.getCommitOrder(e,t);N({command:"compareCommits",repo:this.currentRepo,commitHash:e,compareWithHash:t,fromHash:i.from,toHash:i.to})};e.prototype.fetchAvatars=function(e){var t=Object.keys(e);for(var i=0;i<t.length;i++){N({command:"fetchAvatar",repo:this.currentRepo,email:t[i],commits:e[t[i]]})}};e.prototype.saveState=function(){t.setState({gitRepos:this.gitRepos,gitBranches:this.gitBranches,gitBranchHead:this.gitBranchHead,gitRemotes:this.gitRemotes,commits:this.commits,commitHead:this.commitHead,avatars:this.avatars,currentBranches:this.currentBranches,currentRepo:this.currentRepo,moreCommitsAvailable:this.moreCommitsAvailable,maxCommits:this.maxCommits,showRemoteBranches:this.showRemoteBranches,expandedCommit:this.expandedCommit,scrollTop:this.scrollTop})};e.prototype.render=function(){M(this.controlsElem,"fetchSupported",this.gitRemotes.length>0);this.renderTable();this.renderGraph()};e.prototype.renderGraph=function(){var e=B.getElementById("tableColHeaders");if(e===null)return;var t=this.config.commitDetailsViewLocation==="Inline"?this.expandedCommit:null;var i=e.clientHeight+1,s=t!==null?B.getElementById("commitDetails"):null;this.config.grid.expandY=s!==null?s.getBoundingClientRect().height:this.config.grid.expandY;this.config.grid.y=this.commits.length>0?(this.tableElem.children[0].clientHeight-i-(t!==null?this.config.grid.expandY:0))/this.commits.length:this.config.grid.y;this.config.grid.offsetY=i+this.config.grid.y/2;this.graph.render(t)};e.prototype.renderTable=function(){var l=this;var e=this.getColumnVisibility(),t=this.commits.length>0&&this.commits[0].hash===R?R:this.commitHead,i=this.graph.getVertexColours(),s=this.config.branchLabelsAlignedToGraph?this.graph.getWidthsAtVertices():[];var o='<tr id="tableColHeaders"><th id="tableHeaderGraphCol" class="tableColHeader" data-col="0">Graph</th><th class="tableColHeader" data-col="1">Description</th>'+(e.date?'<th class="tableColHeader" data-col="2">Date</th>':"")+(e.author?'<th class="tableColHeader authorCol" data-col="3">Author</th>':"")+(e.commit?'<th class="tableColHeader" data-col="4">Commit</th>':"")+"</tr>";for(var n=0;n<this.commits.length;n++){var a="",r="",h=D(this.commits[n].message),c=$(this.commits[n].date),m=void 0,d=void 0,u=void 0,p=void 0,f={},g=void 0;if(this.config.combineLocalAndRemoteBranchLabels){g=[];for(m=0;m<this.commits[n].heads.length;m++){f[this.commits[n].heads[m]]=[]}for(m=0;m<this.commits[n].remotes.length;m++){var v=this.commits[n].remotes[m].name.substr(this.commits[n].remotes[m].remote.length+1);if(typeof f[v]!=="undefined"){f[v].push(this.commits[n].remotes[m].remote)}else{g.push(this.commits[n].remotes[m])}}}else{g=this.commits[n].remotes}for(m=0;m<this.commits[n].heads.length;m++){d=D(this.commits[n].heads[m]);u=this.commits[n].heads[m]===this.gitBranchHead;p='<span class="gitRef head'+(u?" active":"")+'" data-name="'+d+'">'+L.branch+'<span class="gitRefName">'+d+"</span>";if(this.config.combineLocalAndRemoteBranchLabels){var C=void 0,b=void 0;for(C=0;C<f[this.commits[n].heads[m]].length;C++){b=D(f[this.commits[n].heads[m]][C]);p+='<span class="gitRefHeadRemote" data-remote="'+b+'">'+b+"</span>"}}p+="</span>";a=u?p+a:a+p}for(m=0;m<g.length;m++){d=D(g[m].name);a+='<span class="gitRef remote" data-name="'+d+'" data-remote="'+D(g[m].remote)+'">'+L.branch+'<span class="gitRefName">'+d+"</span></span>"}for(m=0;m<this.commits[n].tags.length;m++){d=D(this.commits[n].tags[m]);r+='<span class="gitRef tag" data-name="'+d+'">'+L.tag+'<span class="gitRefName">'+d+"</span></span>"}var y=this.commits[n].hash===this.commitHead?'<span class="commitHeadDot"></span>':"";o+='<tr class="commit"'+(this.commits[n].hash!==R?"":' id="uncommittedChanges"')+' data-hash="'+this.commits[n].hash+'" data-id="'+n+'" data-color="'+i[n]+'">'+(this.config.branchLabelsAlignedToGraph?'<td style="padding-left:'+s[n]+'px">'+a+"</td><td>"+y:"<td></td><td>"+y+a)+'<span class="gitRefTags">'+r+"</span>"+(this.commits[n].hash===t?"<b>"+h+"</b>":h)+"</td>"+(e.date?'<td title="'+c.title+'">'+c.value+"</td>":"")+(e.author?'<td class="authorCol" title="'+D(this.commits[n].author+" <"+this.commits[n].email+">")+'">'+(this.config.fetchAvatars?'<span class="avatar" data-email="'+D(this.commits[n].email)+'">'+(typeof this.avatars[this.commits[n].email]==="string"?'<img class="avatarImg" src="'+this.avatars[this.commits[n].email]+'">':"")+"</span>":"")+D(this.commits[n].author)+"</td>":"")+(e.commit?'<td title="'+D(this.commits[n].hash)+'">'+te(this.commits[n].hash)+"</td>":"")+"</tr>"}this.tableElem.innerHTML="<table>"+o+"</table>";this.footerElem.innerHTML=this.moreCommitsAvailable?'<div id="loadMoreCommitsBtn" class="roundedBtn">Load More Commits</div>':"";this.makeTableResizable();if(this.moreCommitsAvailable){B.getElementById("loadMoreCommitsBtn").addEventListener("click",function(){l.footerElem.innerHTML='<h2 id="loadingHeader">'+L.loading+"Loading ...</h2>";l.maxCommits+=l.config.loadMoreCommits;l.closeCommitDetails(true);l.saveState();l.requestLoadCommits(true,function(){})})}if(this.expandedCommit!==null){var x=null,w=null,k=B.getElementsByClassName("commit");for(var n=0;n<k.length;n++){if(this.expandedCommit.hash===k[n].dataset.hash||this.expandedCommit.compareWithHash===k[n].dataset.hash){if(this.expandedCommit.hash===k[n].dataset.hash){x=k[n]}else{w=k[n]}if(x!==null&&(this.expandedCommit.compareWithHash===null||w!==null))break}}if(x===null||this.expandedCommit.compareWithHash!==null&&w===null){this.closeCommitDetails(false);this.saveState()}else{this.expandedCommit.id=parseInt(x.dataset.id);this.expandedCommit.srcElem=x;this.expandedCommit.compareWithSrcElem=w;this.saveState();if(this.expandedCommit.compareWithHash===null){if(this.expandedCommit.commitDetails!==null&&this.expandedCommit.fileTree!==null){this.showCommitDetails(this.expandedCommit.commitDetails,this.expandedCommit.fileTree);if(this.expandedCommit.hash===R)this.requestCommitDetails(this.expandedCommit.hash)}else{this.loadCommitDetails(x)}}else{if(this.expandedCommit.fileChanges!==null&&this.expandedCommit.fileTree!==null){this.showCommitComparison(this.expandedCommit.hash,this.expandedCommit.compareWithHash,this.expandedCommit.fileChanges,this.expandedCommit.fileTree);if(this.expandedCommit.hash===R||this.expandedCommit.compareWithHash===R)this.requestCommitComparison(this.expandedCommit.hash,this.expandedCommit.compareWithHash)}else{this.loadCommitComparison(w)}}}}T("commit","contextmenu",function(e){e.stopPropagation();var t=e.target.closest(".commit");var i=t.dataset.hash,s;if(t.id==="uncommittedChanges"){s=[{title:"Reset uncommitted changes"+E,onClick:function(){le("Are you sure you want to reset the <b>uncommitted changes</b> to <b>HEAD</b>?","mixed",[{name:"Mixed - Keep working tree, but reset index",value:"mixed"},{name:"Hard - Discard all changes",value:"hard"}],"Yes, reset",function(e){N({command:"resetToCommit",repo:l.currentRepo,commitHash:"HEAD",resetMode:e})},t)}},{title:"Clean untracked files"+E,onClick:function(){re("Are you sure you want to clean all untracked files?","Clean untracked directories",true,"Yes, clean",function(e){N({command:"cleanUntrackedFiles",repo:l.currentRepo,directories:e})},t)}},null,{title:"Open Source Control View",onClick:function(){N({command:"viewScm"})}}]}else{s=[{title:"Add Tag"+E,onClick:function(){he("Add tag to commit <b><i>"+te(i)+"</i></b>:",[{type:"text-ref",name:"Name: ",default:""},{type:"select",name:"Type: ",default:"annotated",options:[{name:"Annotated",value:"annotated"},{name:"Lightweight",value:"lightweight"}]},{type:"text",name:"Message: ",default:"",placeholder:"Optional"}],"Add Tag",function(e){N({command:"addTag",repo:l.currentRepo,tagName:e[0],commitHash:i,lightweight:e[1]==="lightweight",message:e[2]})},t)}},{title:"Create Branch"+E,onClick:function(){ae("Enter the name of the branch you would like to create from commit <b><i>"+te(i)+"</i></b>:","","Create Branch",function(e){N({command:"createBranch",repo:l.currentRepo,branchName:e,commitHash:i})},t)}},null,{title:"Checkout"+E,onClick:function(){ne("Are you sure you want to checkout commit <b><i>"+te(i)+"</i></b>? This will result in a 'detached HEAD' state.",function(){N({command:"checkoutCommit",repo:l.currentRepo,commitHash:i})},t)}},{title:"Cherry Pick"+E,onClick:function(){if(l.commits[l.commitLookup[i]].parentHashes.length===1){ne("Are you sure you want to cherry pick commit <b><i>"+te(i)+"</i></b>?",function(){N({command:"cherrypickCommit",repo:l.currentRepo,commitHash:i,parentIndex:0})},t)}else{var e=l.commits[l.commitLookup[i]].parentHashes.map(function(e,t){return{name:te(e)+(typeof l.commitLookup[e]==="number"?": "+l.commits[l.commitLookup[e]].message:""),value:(t+1).toString()}});le("Are you sure you want to cherry pick merge commit <b><i>"+te(i)+"</i></b>? Choose the parent hash on the main branch, to cherry pick the commit relative to:","1",e,"Yes, cherry pick commit",function(e){N({command:"cherrypickCommit",repo:l.currentRepo,commitHash:i,parentIndex:parseInt(e)})},t)}}},{title:"Revert"+E,onClick:function(){if(l.commits[l.commitLookup[i]].parentHashes.length===1){ne("Are you sure you want to revert commit <b><i>"+te(i)+"</i></b>?",function(){N({command:"revertCommit",repo:l.currentRepo,commitHash:i,parentIndex:0})},t)}else{var e=l.commits[l.commitLookup[i]].parentHashes.map(function(e,t){return{name:te(e)+(typeof l.commitLookup[e]==="number"?": "+l.commits[l.commitLookup[e]].message:""),value:(t+1).toString()}});le("Are you sure you want to revert merge commit <b><i>"+te(i)+"</i></b>? Choose the parent hash on the main branch, to revert the commit relative to:","1",e,"Yes, revert commit",function(e){N({command:"revertCommit",repo:l.currentRepo,commitHash:i,parentIndex:parseInt(e)})},t)}}},null,{title:"Merge into current branch"+E,onClick:function(){he("Are you sure you want to merge commit <b><i>"+te(i)+"</i></b> into the current branch?",[{type:"checkbox",name:"Create a new commit even if fast-forward is possible",value:true},{type:"checkbox",name:"Squash commits",value:false}],"Yes, merge",function(e){me("Merging Commit");N({command:"mergeCommit",repo:l.currentRepo,commitHash:i,createNewCommit:e[0]==="checked",squash:e[1]==="checked"})},t)}},{title:"Rebase current branch on this Commit"+E,onClick:function(){he("Are you sure you want to rebase the current branch on commit <b><i>"+te(i)+"</i></b>?",[{type:"checkbox",name:"Launch Interactive Rebase in new Terminal",value:false},{type:"checkbox",name:"Ignore Date (non-interactive rebase only)",value:true}],"Yes, rebase",function(e){var t=e[0]==="checked";me(t?"Launching Interactive Rebase":"Rebasing on Commit");N({command:"rebaseOn",repo:l.currentRepo,base:i,type:"Commit",ignoreDate:e[1]==="checked",interactive:t})},t)}},{title:"Reset current branch to this Commit"+E,onClick:function(){le("Are you sure you want to reset the <b>current branch</b> to commit <b><i>"+te(i)+"</i></b>?","mixed",[{name:"Soft - Keep all changes, but reset head",value:"soft"},{name:"Mixed - Keep working tree, but reset index",value:"mixed"},{name:"Hard - Discard all changes",value:"hard"}],"Yes, reset",function(e){N({command:"resetToCommit",repo:l.currentRepo,commitHash:i,resetMode:e})},t)}},null,{title:"Copy Commit Hash to Clipboard",onClick:function(){N({command:"copyToClipboard",type:"Commit Hash",data:i})}}]}ie(e,s,t)});T("commit","click",function(e){var t=e.target.closest(".commit");if(l.expandedCommit!==null){if(l.expandedCommit.hash===t.dataset.hash){l.closeCommitDetails(true)}else if(e.ctrlKey||e.metaKey){if(l.expandedCommit.compareWithHash===t.dataset.hash){l.closeCommitComparison(true)}else{l.loadCommitComparison(t)}}else{l.loadCommitDetails(t)}}else{l.loadCommitDetails(t)}});T("gitRef","contextmenu",function(e){e.stopPropagation();var t=e.target.closest(".gitRef");var i=A(t.dataset.name),s,o;if(t.classList.contains("tag")){s=[{title:"Delete Tag"+E,onClick:function(){ne("Are you sure you want to delete the tag <b><i>"+D(i)+"</i></b>?",function(){N({command:"deleteTag",repo:l.currentRepo,tagName:i})},null)}},{title:"Push Tag"+E,onClick:function(){ne("Are you sure you want to push the tag <b><i>"+D(i)+"</i></b>?",function(){me("Pushing Tag");N({command:"pushTag",repo:l.currentRepo,tagName:i})},null)}}];o="Tag Name"}else{var n=t.classList.contains("head"),a=e.target.className==="gitRefHeadRemote";if(n&&a){i=A(e.target.dataset.remote)+"/"+i;n=false}if(n){s=[];if(l.gitBranchHead!==i){s.push({title:"Checkout Branch",onClick:function(){return l.checkoutBranchAction(i,null)}})}s.push({title:"Rename Branch"+E,onClick:function(){ae("Enter the new name for branch <b><i>"+D(i)+"</i></b>:",i,"Rename Branch",function(e){N({command:"renameBranch",repo:l.currentRepo,oldName:i,newName:e})},null)}});if(l.gitBranchHead!==i){s.push({title:"Delete Branch"+E,onClick:function(){re("Are you sure you want to delete the branch <b><i>"+D(i)+"</i></b>?","Force Delete",false,"Delete Branch",function(e){N({command:"deleteBranch",repo:l.currentRepo,branchName:i,forceDelete:e})},null)}},{title:"Merge into current branch"+E,onClick:function(){he("Are you sure you want to merge branch <b><i>"+D(i)+"</i></b> into the current branch?",[{type:"checkbox",name:"Create a new commit even if fast-forward is possible",value:true},{type:"checkbox",name:"Squash commits",value:false}],"Yes, merge",function(e){me("Merging Branch");N({command:"mergeBranch",repo:l.currentRepo,branchName:i,createNewCommit:e[0]==="checked",squash:e[1]==="checked"})},null)}},{title:"Rebase current branch on Branch"+E,onClick:function(){he("Are you sure you want to rebase the current branch on branch <b><i>"+D(i)+"</i></b>?",[{type:"checkbox",name:"Launch Interactive Rebase in new Terminal",value:false},{type:"checkbox",name:"Ignore Date (non-interactive rebase only)",value:true}],"Yes, rebase",function(e){var t=e[0]==="checked";me(t?"Launching Interactive Rebase":"Rebasing on Branch");N({command:"rebaseOn",repo:l.currentRepo,base:i,type:"Branch",ignoreDate:e[1]==="checked",interactive:t})},null)}})}}else{var r=A((a?e.target:t).dataset.remote);s=[{title:"Delete Remote Branch"+E,onClick:function(){ne("Are you sure you want to delete the remote branch <b><i>"+D(i)+"</i></b>?",function(){me("Deleting Remote Branch");N({command:"deleteRemoteBranch",repo:l.currentRepo,branchName:i.substr(r.length+1),remote:r})},null)}},{title:"Checkout Branch"+E,onClick:function(){return l.checkoutBranchAction(i,r)}}]}o="Branch Name"}s.push(null,{title:"Copy "+o+" to Clipboard",onClick:function(){N({command:"copyToClipboard",type:o,data:i})}});ie(e,s,t)});T("gitRef","click",function(e){return e.stopPropagation()});T("gitRef","dblclick",function(e){e.stopPropagation();pe();var t=e.target.closest(".gitRef");if(!t.classList.contains("tag")){var i=A(t.dataset.name),s=t.classList.contains("head"),o=e.target.className==="gitRefHeadRemote";if(s&&o){i=A(e.target.dataset.remote)+"/"+i;s=false}l.checkoutBranchAction(i,s?null:A((o?e.target:t).dataset.remote))}})};e.prototype.renderUncommittedChanges=function(){var e=this.getColumnVisibility(),t=$(this.commits[0].date);B.getElementById("uncommittedChanges").innerHTML="<td></td><td><b>"+D(this.commits[0].message)+"</b></td>"+(e.date?'<td title="'+t.title+'">'+t.value+"</td>":"")+(e.author?'<td title="* <>">*</td>':"")+(e.commit?'<td title="*">*</td>':"")};e.prototype.renderShowLoading=function(){pe();this.graph.clear();this.tableElem.innerHTML='<h2 id="loadingHeader">'+L.loading+"Loading ...</h2>";this.footerElem.innerHTML=""};e.prototype.checkoutBranchAction=function(t,e){var i=this;if(e!==null){ae("Enter the name of the new branch you would like to create when checking out <b><i>"+D(t)+"</i></b>:",t.substr(e.length+1),"Checkout Branch",function(e){N({command:"checkoutBranch",repo:i.currentRepo,branchName:e,remoteBranch:t})},null)}else{N({command:"checkoutBranch",repo:this.currentRepo,branchName:t,remoteBranch:null})}};e.prototype.makeTableResizable=function(){var n=this;var o=B.getElementById("tableColHeaders"),a=B.getElementsByClassName("tableColHeader");var r,l=-1,h=-1,c=-1;var m=function(){a[0].style.width=r[0]+"px";a[0].style.padding="";for(var e=2;e<a.length;e++){a[e].style.width=r[parseInt(a[e].dataset.col)]+"px"}n.tableElem.className="fixedLayout";n.graph.limitMaxWidth(r[0]+16)};for(var e=0;e<a.length;e++){var t=parseInt(a[e].dataset.col);a[e].innerHTML+=(e>0?'<span class="resizeCol left" data-col="'+(t-1)+'"></span>':"")+(e<a.length-1?'<span class="resizeCol right" data-col="'+t+'"></span>':"")}var i=this.gitRepos[this.currentRepo].columnWidths;if(i===null){var s=this.config.defaultColumnVisibility;r=[f,f,s.date?f:u,s.author?f:u,s.commit?f:u];this.saveColumnWidths(r)}else{r=[i[0],f,i[1],i[2],i[3]]}if(r[0]!==f){m()}else{this.tableElem.className="autoLayout";this.graph.limitMaxWidth(-1);a[0].style.padding="0 "+Math.round((Math.max(this.graph.getWidth()+16,64)-(a[0].offsetWidth-v))/2)+"px"}T("resizeCol","mousedown",function(e){h=parseInt(e.target.dataset.col);while(r[h]===u)h--;l=e.clientX;var t=r[0]===f;for(var i=0;i<a.length;i++){var s=parseInt(a[i].dataset.col);if(t&&s!==1)r[s]=a[i].clientWidth-v;if(s===h)c=i}if(t)m();o.classList.add("resizing")});o.addEventListener("mousemove",function(e){if(h>-1){var t=e;var i=t.clientX-l;if(h===0){if(r[0]+i<g)i=-r[0]+g;if(a[1].clientWidth-v-i<g)i=a[1].clientWidth-v-g;r[0]+=i;a[0].style.width=r[0]+"px";n.graph.limitMaxWidth(r[0]+16)}else{var s=h!==1?r[h]:a[1].clientWidth-v;var o=h+1;while(r[o]===u)o++;if(s+i<g)i=-s+g;if(r[o]-i<g)i=r[o]-g;if(h!==1){r[h]+=i;a[c].style.width=r[h]+"px"}r[o]-=i;a[c+1].style.width=r[o]+"px"}l=t.clientX}});var d=function(){if(h>-1){h=-1;c=-1;l=-1;o.classList.remove("resizing");n.saveColumnWidths(r)}};o.addEventListener("mouseup",d);o.addEventListener("mouseleave",d);o.addEventListener("contextmenu",function(e){e.stopPropagation();var t=function(e,t){r[e]=r[e]!==u?u:r[0]===f?f:t-v;n.saveColumnWidths(r);oe();n.render()};se(e,[{title:"Date",checked:r[2]!==u,onClick:function(){return t(2,128)}},{title:"Author",checked:r[3]!==u,onClick:function(){return t(3,128)}},{title:"Commit",checked:r[4]!==u,onClick:function(){return t(4,80)}}],null)})};e.prototype.saveColumnWidths=function(e){this.gitRepos[this.currentRepo].columnWidths=[e[0],e[2],e[3],e[4]];N({command:"saveRepoState",repo:this.currentRepo,state:this.gitRepos[this.currentRepo]})};e.prototype.getColumnVisibility=function(){var e=this.gitRepos[this.currentRepo].columnWidths;if(e!==null){return{date:e[1]!==u,author:e[2]!==u,commit:e[3]!==u}}else{var t=this.config.defaultColumnVisibility;return{date:t.date,author:t.author,commit:t.commit}}};e.prototype.getNumColumns=function(){var e=this.getColumnVisibility();return 2+(e.date?1:0)+(e.author?1:0)+(e.commit?1:0)};e.prototype.observeWindowSizeChanges=function(){var e=this;var t=o.outerWidth,i=o.outerHeight;o.addEventListener("resize",function(){if(t===o.outerWidth&&i===o.outerHeight){e.renderGraph()}else{t=o.outerWidth;i=o.outerHeight}})};e.prototype.observeWebviewStyleChanges=function(){var i=this;var s=F("--vscode-font-family"),o=F("--vscode-editor-font-family");new MutationObserver(function(){var e=F("--vscode-font-family"),t=F("--vscode-editor-font-family");if(e!==s||t!==o){s=e;o=t;i.repoDropdown.refresh();i.branchDropdown.refresh()}}).observe(B.documentElement,{attributes:true,attributeFilter:["style"]})};e.prototype.observeWebviewScroll=function(){var t=this;var i=this.viewElem.scrollTop>0,s=null;this.scrollShadowElem.className=i?C:"";this.viewElem.addEventListener("scroll",function(){var e=t.viewElem.scrollTop;if(i!==e>0){i=e>0;t.scrollShadowElem.className=i?C:""}if(s!==null)clearTimeout(s);s=setTimeout(function(){t.scrollTop=e;t.saveState();s=null},250)})};e.prototype.observeKeyboardEvents=function(){var n=this;B.addEventListener("keydown",function(e){if(G){if(e.key==="r"&&(e.ctrlKey||e.metaKey)){n.refresh(true)}else if(n.expandedCommit!==null){if(e.key==="Escape"){n.closeCommitDetails(true)}else if(e.key==="ArrowUp"||e.key==="ArrowDown"){var t=-1;if(e.key==="ArrowUp"&&n.commitLookup[n.expandedCommit.hash]>0){t=n.commitLookup[n.expandedCommit.hash]-1}else if(e.key==="ArrowDown"&&n.commitLookup[n.expandedCommit.hash]<n.commits.length-1){t=n.commitLookup[n.expandedCommit.hash]+1}if(t>-1){e.preventDefault();var i=n.commits[t].hash,s=B.getElementsByClassName("commit");for(var o=0;o<s.length;o++){if(i===s[o].dataset.hash){n.loadCommitDetails(s[o]);break}}}}}}else{if(e.key==="Escape"){pe()}else if(e.key==="Enter"&&J!==null){J()}}})};e.prototype.loadCommitDetails=function(e){this.closeCommitDetails(true);this.expandedCommit={id:parseInt(e.dataset.id),hash:e.dataset.hash,srcElem:e,commitDetails:null,fileChanges:null,fileTree:null,compareWithHash:null,compareWithSrcElem:null};this.saveState();this.requestCommitDetails(this.expandedCommit.hash)};e.prototype.closeCommitDetails=function(e){if(this.expandedCommit!==null){if(this.config.commitDetailsViewLocation==="Inline"){var t=B.getElementById("commitDetails");if(typeof t==="object"&&t!==null)t.remove()}else{B.body.classList.remove(x);this.dockedCommitDetailsView.innerHTML=""}if(typeof this.expandedCommit.srcElem==="object"&&this.expandedCommit.srcElem!==null)this.expandedCommit.srcElem.classList.remove(m);if(typeof this.expandedCommit.compareWithSrcElem==="object"&&this.expandedCommit.compareWithSrcElem!==null)this.expandedCommit.compareWithSrcElem.classList.remove(d);this.expandedCommit=null;if(e){this.saveState();if(this.config.commitDetailsViewLocation==="Inline")this.renderGraph()}}};e.prototype.showCommitDetails=function(e,t){if(this.expandedCommit===null||this.expandedCommit.srcElem===null||this.expandedCommit.hash!==e.hash)return;var i=B.getElementById("commitDetails");if(typeof i==="object"&&i!==null)i.remove();this.expandedCommit.commitDetails=e;if(ee(this.expandedCommit.fileChanges,e.fileChanges)){this.expandedCommit.fileChanges=e.fileChanges;this.expandedCommit.fileTree=t}this.expandedCommit.srcElem.classList.add(m);this.saveState();this.renderCommitDetailsView()};e.prototype.loadCommitComparison=function(e){if(this.expandedCommit!==null){this.closeCommitComparison(false);this.expandedCommit.compareWithHash=e.dataset.hash;this.expandedCommit.compareWithSrcElem=e;this.saveState();this.requestCommitComparison(this.expandedCommit.hash,this.expandedCommit.compareWithHash)}};e.prototype.closeCommitComparison=function(e){if(this.expandedCommit!==null&&this.expandedCommit.compareWithHash){if(typeof this.expandedCommit.compareWithSrcElem==="object"&&this.expandedCommit.compareWithSrcElem!==null)this.expandedCommit.compareWithSrcElem.classList.remove(d);this.expandedCommit.compareWithHash=null;this.expandedCommit.compareWithSrcElem=null;this.expandedCommit.fileChanges=null;this.expandedCommit.fileTree=null;this.saveState();if(e)N({command:"commitDetails",repo:this.currentRepo,commitHash:this.expandedCommit.hash})}};e.prototype.showCommitComparison=function(e,t,i,s){if(this.expandedCommit===null||this.expandedCommit.srcElem===null||this.expandedCommit.compareWithSrcElem===null||this.expandedCommit.hash!==e||this.expandedCommit.compareWithHash!==t)return;this.expandedCommit.commitDetails=null;if(ee(this.expandedCommit.fileChanges,i)){this.expandedCommit.fileChanges=i;this.expandedCommit.fileTree=s}this.expandedCommit.srcElem.classList.add(m);this.expandedCommit.compareWithSrcElem.classList.add(d);this.saveState();this.renderCommitDetailsView()};e.prototype.renderCommitDetailsView=function(){var o=this;if(this.expandedCommit===null||this.expandedCommit.srcElem===null)return;var e=this.config.commitDetailsViewLocation!=="Inline";var t=e?this.dockedCommitDetailsView:B.getElementById("commitDetails"),i="";if(t===null){t=B.createElement("tr");t.id="commitDetails";I(t,this.expandedCommit.srcElem)}if(this.expandedCommit.compareWithHash===null){if(this.expandedCommit.hash!==R){var s=this.expandedCommit.commitDetails;i+='<span class="commitDetailsSummaryTop'+(typeof this.avatars[s.email]==="string"?" withAvatar":"")+'"><span class="commitDetailsSummaryTopRow"><span class="commitDetailsSummaryKeyValues">';i+="<b>Commit: </b>"+D(s.hash)+"<br>";i+="<b>Parents: </b>"+s.parents.join(", ")+"<br>";i+="<b>Author: </b>"+D(s.author)+' &lt;<a href="mailto:'+encodeURIComponent(s.email)+'">'+D(s.email)+"</a>&gt;<br>";i+="<b>Date: </b>"+new Date(s.date*1e3).toString()+"<br>";i+="<b>Committer: </b>"+D(s.committer)+"</span>";if(typeof this.avatars[s.email]==="string")i+='<span class="commitDetailsSummaryAvatar"><img src="'+this.avatars[s.email]+'"></span>';i+="</span></span><br><br>";i+=D(s.body).replace(/\n/g,"<br>")}else{i+="Displaying all uncommitted changes."}i+='</div><div id="commitDetailsFiles">'+Z(this.expandedCommit.fileTree,this.expandedCommit.fileChanges)+"</table>";this.renderGraph()}else{var n=this.getCommitOrder(this.expandedCommit.hash,this.expandedCommit.compareWithHash);i+="Displaying all changes from <b>"+n.from+"</b> to <b>"+(n.to!==R?n.to:"Uncommitted Changes")+"</b>.</div>";i+='<div id="commitDetailsFiles">'+Z(this.expandedCommit.fileTree,this.expandedCommit.fileChanges)+"</table>"}i='<div id="commitDetailsSummary">'+i+'</div><div id="commitDetailsClose" title="Close">'+L.close+"</div>";t.innerHTML=e?i:'<td></td><td colspan="'+(this.getNumColumns()-1)+'">'+i+"</td>";if(e){B.body.classList.add(x);var a=this.controlsElem.clientHeight+this.expandedCommit.srcElem.offsetTop;if(a-8<this.viewElem.scrollTop){this.viewElem.scroll(0,a-8)}else if(a-this.viewElem.clientHeight+32>this.viewElem.scrollTop){this.viewElem.scroll(0,a-this.viewElem.clientHeight+32)}}else{var a=this.controlsElem.clientHeight+t.offsetTop;if(this.config.autoCenterCommitDetailsView){this.viewElem.scroll(0,a-12+(this.config.grid.expandY-this.viewElem.clientHeight)/2)}else if(a-32<this.viewElem.scrollTop){this.viewElem.scroll(0,a-32)}else if(a+this.config.grid.expandY-this.viewElem.clientHeight+8>this.viewElem.scrollTop){this.viewElem.scroll(0,a+this.config.grid.expandY-this.viewElem.clientHeight+8)}}B.getElementById("commitDetailsClose").addEventListener("click",function(){o.closeCommitDetails(true)});T("gitFolder","click",function(e){var t=e.target.closest(".gitFolder");var i=t.parentElement;i.classList.toggle("closed");var s=!i.classList.contains("closed");i.children[0].children[0].innerHTML=s?L.openFolder:L.closedFolder;i.children[1].classList.toggle("hidden");_(o.expandedCommit.fileTree,decodeURIComponent(t.dataset.folderpath),s);o.saveState()});T("gitFile","click",function(e){var t=e.target.closest(".gitFile");if(o.expandedCommit===null||!t.classList.contains("gitDiffPossible"))return;var i=o.getCommitOrder(o.expandedCommit.hash,o.expandedCommit.compareWithHash===null?o.expandedCommit.hash:o.expandedCommit.compareWithHash);N({command:"viewDiff",repo:o.currentRepo,fromHash:i.from,toHash:i.to,oldFilePath:decodeURIComponent(t.dataset.oldfilepath),newFilePath:decodeURIComponent(t.dataset.newfilepath),type:t.dataset.type})})};e.prototype.getCommitOrder=function(e,t){if(this.commitLookup[e]>this.commitLookup[t]){return{from:e,to:t}}else{return{from:t,to:e}}};return e}();var O=B.getElementById("view"),G=true,z=false;var Y=B.getElementById("contextMenu"),q=null;var X=B.getElementById("dialog"),j=B.getElementById("dialogBacking"),K=null,J=null;o.addEventListener("load",function(){if(z)return;z=true;var i=new e(O,viewState.repos,viewState.lastActiveRepo,viewState.loadRepo,{autoCenterCommitDetailsView:viewState.autoCenterCommitDetailsView,branchLabelsAlignedToGraph:viewState.refLabelAlignment==="Branches (aligned to the graph) & Tags (on the right)",combineLocalAndRemoteBranchLabels:viewState.combineLocalAndRemoteBranchLabels,commitDetailsViewLocation:viewState.commitDetailsViewLocation,customBranchGlobPatterns:viewState.customBranchGlobPatterns,defaultColumnVisibility:viewState.defaultColumnVisibility,fetchAvatars:viewState.fetchAvatars,graphColours:viewState.graphColours,graphStyle:viewState.graphStyle,grid:{x:16,y:24,offsetX:8,offsetY:12,expandY:250},initialLoadCommits:viewState.initialLoadCommits,loadMoreCommits:viewState.loadMoreCommits,showCurrentBranchByDefault:viewState.showCurrentBranchByDefault,tagLabelsOnRight:viewState.refLabelAlignment!=="Normal"},t.getState());o.addEventListener("message",function(e){var t=e.data;switch(t.command){case"addTag":s(t.status,"Unable to Add Tag");break;case"checkoutBranch":s(t.status,"Unable to Checkout Branch");break;case"checkoutCommit":s(t.status,"Unable to Checkout Commit");break;case"cherrypickCommit":s(t.status,"Unable to Cherry Pick Commit");break;case"cleanUntrackedFiles":s(t.status,"Unable to Clean Untracked Files");break;case"commitDetails":if(t.commitDetails===null){i.closeCommitDetails(true);ce("Unable to load commit details",null,null)}else{i.showCommitDetails(t.commitDetails,Q(t.commitDetails.fileChanges))}break;case"compareCommits":if(t.fileChanges===null){i.closeCommitComparison(true);ce("Unable to compare commits",null,null)}else{i.showCommitComparison(t.commitHash,t.compareWithHash,t.fileChanges,Q(t.fileChanges))}break;case"copyToClipboard":if(t.success===false)ce("Unable to Copy "+t.type+" to Clipboard",null,null);break;case"createBranch":s(t.status,"Unable to Create Branch");break;case"deleteBranch":s(t.status,"Unable to Delete Branch");break;case"deleteRemoteBranch":s(t.status,"Unable to Delete Remote Branch");break;case"deleteTag":s(t.status,"Unable to Delete Tag");break;case"fetch":s(t.status,"Unable to Fetch from Remote(s)");break;case"fetchAvatar":i.loadAvatar(t.email,t.image);break;case"loadBranches":i.loadBranches(t.branches,t.head,t.hard,t.isRepo);break;case"loadCommits":i.loadCommits(t.commits,t.head,t.remotes,t.moreCommitsAvailable,t.hard);break;case"loadRepos":i.loadRepos(t.repos,t.lastActiveRepo,t.loadRepo);break;case"mergeBranch":s(t.status,"Unable to Merge Branch");break;case"mergeCommit":s(t.status,"Unable to Merge Commit");break;case"pushTag":s(t.status,"Unable to Push Tag");break;case"renameBranch":s(t.status,"Unable to Rename Branch");break;case"rebaseOn":if(t.status===null){if(t.interactive){ue()}else{i.refresh(true)}}else{ce("Unable to Rebase current branch on "+t.type,t.status,null)}break;case"refresh":i.refresh(false);break;case"resetToCommit":s(t.status,"Unable to Reset to Commit");break;case"revertCommit":s(t.status,"Unable to Revert Commit");break;case"viewDiff":if(!t.success)ce("Unable to view Diff of File",null,null);break;case"viewScm":if(!t.success)ce("Unable to open the Source Control View",null,null);break}});function s(e,t){if(e===null){i.refresh(true)}else{ce(t,e,null)}}});function $(e){var t=new Date(e*1e3),i;var s=t.getDate()+" "+r[t.getMonth()]+" "+t.getFullYear();var o=H(t.getHours())+":"+H(t.getMinutes());switch(viewState.dateFormat){case"Date Only":i=s;break;case"Relative":var n=Math.round((new Date).getTime()/1e3)-e,a=void 0;if(n<60){a="second"}else if(n<3600){a="minute";n/=60}else if(n<86400){a="hour";n/=3600}else if(n<604800){a="day";n/=86400}else if(n<2629800){a="week";n/=604800}else if(n<31557600){a="month";n/=2629800}else{a="year";n/=31557600}n=Math.round(n);i=n+" "+a+(n!==1?"s":"")+" ago";break;default:i=s+" "+o}return{title:s+" "+o,value:i}}function Q(e){var t={},i,s,o,n;var a={type:"folder",name:"",folderPath:"",contents:t,open:true};for(i=0;i<e.length;i++){n=a;o=e[i].newFilePath.split("/");for(s=0;s<o.length;s++){if(s<o.length-1){if(typeof n.contents[o[s]]==="undefined"){t={};n.contents[o[s]]={type:"folder",name:o[s],folderPath:o.slice(0,s+1).join("/"),contents:t,open:true}}n=n.contents[o[s]]}else{n.contents[o[s]]={type:"file",name:o[s],index:i}}}}return a}function Z(i,e){var t=(i.name!==""?'<span class="gitFolder" data-folderpath="'+encodeURIComponent(i.folderPath)+'"><span class="gitFolderIcon">'+(i.open?L.openFolder:L.closedFolder)+'</span><span class="gitFolderName">'+i.name+"</span></span>":"")+'<ul class="gitFolderContents'+(!i.open?" hidden":"")+'">',s=Object.keys(i.contents),o,n,a,r;s.sort(function(e,t){return i.contents[e].type==="folder"&&i.contents[t].type==="file"?-1:i.contents[e].type==="file"&&i.contents[t].type==="folder"?1:i.contents[e].name<i.contents[t].name?-1:i.contents[e].name>i.contents[t].name?1:0});for(o=0;o<s.length;o++){if(i.contents[s[o]].type==="folder"){a=i.contents[s[o]];t+="<li"+(!a.open?' class="closed"':"")+">"+Z(a,e)+"</li>"}else{n=e[i.contents[s[o]].index];r=n.type==="U"||n.additions!==null&&n.deletions!==null;t+='<li class="gitFile '+n.type+(r?" gitDiffPossible":"")+'" data-oldfilepath="'+encodeURIComponent(n.oldFilePath)+'" data-newfilepath="'+encodeURIComponent(n.newFilePath)+'" data-type="'+n.type+'" title="'+(r?"Click to view diff":"This is a binary file, unable to view diff.")+'"><span class="gitFileIcon">'+L.file+"</span>"+i.contents[s[o]].name+(n.type==="R"?' <span class="gitFileRename" title="'+D(n.oldFilePath+" was renamed to "+n.newFilePath)+'">R</span>':"")+(n.type!=="A"&&n.type!=="U"&&n.type!=="D"&&n.additions!==null&&n.deletions!==null?'<span class="gitFileAddDel">(<span class="gitFileAdditions" title="'+n.additions+" addition"+(n.additions!==1?"s":"")+'">+'+n.additions+'</span>|<span class="gitFileDeletions" title="'+n.deletions+" deletion"+(n.deletions!==1?"s":"")+'">-'+n.deletions+"</span>)</span>":"")+"</li>"}}return t+"</ul>"}function _(e,t,i){var s=t.split("/"),o,n=e;for(o=0;o<s.length;o++){if(typeof n.contents[s[o]]!=="undefined"){n=n.contents[s[o]];if(o===s.length-1){n.open=i;return}}else{return}}}function ee(e,t){if(e===null!==(t===null)){return true}else if(e===null&&t===null){return false}else{return!k(e,t,function(e,t){return e.additions===t.additions&&e.deletions===t.deletions&&e.newFilePath===t.newFilePath&&e.oldFilePath===t.oldFilePath&&e.type===t.type})}}function te(e){return e.substring(0,8)}function ie(e,t,i){var s="",o,n=e;for(o=0;o<t.length;o++){s+=t[o]!==null?'<li class="contextMenuItem" data-index="'+o+'">'+t[o].title+"</li>":'<li class="contextMenuDivider"></li>'}fe();Y.style.opacity="0";Y.className=C;Y.innerHTML=s;var a=Y.getBoundingClientRect();Y.style.left=O.scrollLeft+n.pageX+(n.pageX+a.width<O.clientWidth?-2:2-a.width)+"px";Y.style.top=O.scrollTop+n.pageY+(n.pageY+a.height<O.clientHeight?-2:2-a.height)+"px";Y.style.opacity="1";T("contextMenuItem","click",function(e){e.stopPropagation();oe();t[parseInt(e.target.closest(".contextMenuItem").dataset.index)].onClick()});q=i;if(q!==null)q.classList.add(b);G=false}function se(e,t,i){for(var s=0;s<t.length;s++){t[s].title='<span class="contextMenuItemCheck">'+(t[s].checked?L.check:"")+"</span>"+t[s].title}ie(e,t,i);Y.classList.add("checked")}function oe(){Y.className="";Y.innerHTML="";Y.style.left="0px";Y.style.top="0px";if(q!==null){q.classList.remove(b);q=null}G=true}function ne(e,t,i){de(e,"Yes","No",function(){ue();t()},i)}function ae(e,t,i,s,o){he(e,[{type:"text-ref",name:"",default:t}],i,function(e){return s(e[0])},o)}function re(e,t,i,s,o,n){he(e,[{type:"checkbox",name:t,value:i}],s,function(e){return o(e[0]==="checked")},n)}function le(e,t,i,s,o,n){he(e,[{type:"select",name:"",options:i,default:t}],s,function(e){return o(e[0])},n)}function he(e,o,s,n,t){var i=-1,a=o.length>1;var r=a;if(a){for(var l=0;l<o.length;l++){if(o[l].type!=="checkbox"){r=false;break}}}var h=e+'<br><table class="dialogForm '+(a?r?"multiCheckbox":"multi":"single")+'">';for(var l=0;l<o.length;l++){var c=o[l];h+="<tr>"+(a&&!r?"<td>"+c.name+"</td>":"")+"<td>";if(c.type==="select"){h+='<select id="dialogInput'+l+'">';for(var m=0;m<c.options.length;m++){h+='<option value="'+c.options[m].value+'"'+(c.options[m].value===c.default?" selected":"")+">"+c.options[m].name+"</option>"}h+="</select>"}else if(c.type==="checkbox"){h+='<span class="dialogFormCheckbox"><label><input id="dialogInput'+l+'" type="checkbox"'+(c.value?" checked":"")+"/>"+(a&&!r?"":c.name)+"</label></span>"}else{h+='<input id="dialogInput'+l+'" type="text" value="'+c.default+'"'+(c.type==="text"&&c.placeholder!==null?' placeholder="'+c.placeholder+'"':"")+"/>";if(c.type==="text-ref")i=l}h+="</td></tr>"}h+="</table>";de(h,s,"Cancel",function(){if(X.className===C+" noInput"||X.className===C+" inputInvalid")return;var e=[];for(var t=0;t<o.length;t++){var i=o[t],s=B.getElementById("dialogInput"+t);if(i.type==="select"){e.push(s.value)}else if(i.type==="checkbox"){e.push(s.checked?"checked":"unchecked")}else{e.push(s.value)}}ue();n(e)},t);if(i>-1){var d=B.getElementById("dialogInput"+i),u=B.getElementById("dialogAction");if(d.value==="")X.className=C+" noInput";d.focus();d.addEventListener("keyup",function(){var e=d.value==="",t=d.value.match(p)!==null;var i=C+(e?" noInput":t?" inputInvalid":"");if(X.className!==i){X.className=i;u.title=t?"Unable to "+s+", one or more invalid characters entered.":""}})}}function ce(e,t,i){de(L.alert+"Error: "+e+(t!==null?'<br><span class="errorReason">'+D(t).split("\n").join("<br>")+"</span>":""),null,"Dismiss",null,i)}function me(e){de('<span id="actionRunning">'+L.loading+e+" ...</span>",null,"Dismiss",null,null)}function de(e,t,i,s,o){j.className=C;X.className=C;X.innerHTML=e+"<br>"+(t!==null?'<div id="dialogAction" class="roundedBtn">'+t+"</div>":"")+'<div id="dialogDismiss" class="roundedBtn">'+i+"</div>";if(t!==null&&s!==null){B.getElementById("dialogAction").addEventListener("click",s);J=s}B.getElementById("dialogDismiss").addEventListener("click",ue);K=o;if(K!==null)K.classList.add(y);G=false}function ue(){j.className="";X.className="";X.innerHTML="";if(K!==null){K.classList.remove(y);K=null}J=null;G=true}function pe(){if(X.classList.contains(C))ue();if(Y.classList.contains(C))oe()}B.addEventListener("click",fe);B.addEventListener("contextmenu",fe);B.addEventListener("mouseleave",fe);function fe(){if(Y.classList.contains(C))oe()}})(document,window);